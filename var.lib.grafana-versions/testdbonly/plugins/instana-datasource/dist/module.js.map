{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"lodash\"","webpack:///external \"@grafana/ui\"","webpack:///external \"@grafana/data\"","webpack:///../node_modules/css-loader/dist/runtime/api.js","webpack:///../node_modules/style-loader/lib/addStyles.js","webpack:///external \"@grafana/runtime\"","webpack:///./components/plugin.css?fa54","webpack:///./components/plugin.css","webpack:///../node_modules/style-loader/lib/urls.js","webpack:///./instana-grafana.css?07a9","webpack:///./instana-grafana.css","webpack:///../node_modules/tslib/tslib.es6.js","webpack:///./util/request_handler.ts","webpack:///./util/target_util.ts","webpack:///./GlobalVariables.ts","webpack:///./util/time_util.ts","webpack:///./cache.ts","webpack:///./datasources/DataSource_Slo.ts","webpack:///./lists/metric_categories.ts","webpack:///./util/queryInterval_check.ts","webpack:///./lists/granularities.ts","webpack:///./lists/rollups.ts","webpack:///./util/rollup_granularity_util.ts","webpack:///./lists/max_metrics.ts","webpack:///./datasources/Datasource_Infrastructure.ts","webpack:///./util/delta_util.ts","webpack:///./util/instana_version.ts","webpack:///./util/aggregation_util.ts","webpack:///./util/analyze_util.ts","webpack:///./datasources/DataSource_Website.ts","webpack:///./lists/default_metric_catalog.ts","webpack:///./datasources/DataSource_Application.ts","webpack:///./datasources/DataSource_Service.ts","webpack:///./datasources/DataSource_Endpoint.ts","webpack:///./migration.ts","webpack:///./datasources/DataSource.ts","webpack:///./util/proxy_check.ts","webpack:///./components/ConfigEditor.tsx","webpack:///./components/FormField/FormWrapper.tsx","webpack:///./components/FormField/FormSelect.tsx","webpack:///./components/ApplicationServiceEndpointMetrics/ApplicationServiceEndpointMetrics.tsx","webpack:///./lists/apply_call_to_entities.ts","webpack:///./components/Analyze/ApplicationCallsMetrics.tsx","webpack:///./components/FormField/FormInput.tsx","webpack:///./components/Infrastructure/Custom/MetricFilter.tsx","webpack:///./components/FormField/FormSwitch.tsx","webpack:///./components/Infrastructure/Custom/FreeTextMetrics.tsx","webpack:///./lists/aggregation_function.ts","webpack:///./components/AdvancedSettings/AggregateQuery.tsx","webpack:///./components/AdvancedSettings/AdvancedSettings.tsx","webpack:///./components/Infrastructure/QueryType.tsx","webpack:///./components/Infrastructure/Infrastructure.tsx","webpack:///./lists/slo_specifics.ts","webpack:///./components/SLOInformation/SloInformation.tsx","webpack:///./lists/beacon_types.ts","webpack:///./components/Analyze/WebsiteMetrics.tsx","webpack:///./lists/operators.ts","webpack:///./components/Analyze/Filter.tsx","webpack:///./components/Metric/Metric.tsx","webpack:///./components/QueryEditor.tsx","webpack:///./module.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","useSourceMap","list","toString","this","map","item","content","cssMapping","btoa","sourceMapping","sourceMap","base64","unescape","encodeURIComponent","JSON","stringify","data","concat","sourceURLs","sources","source","sourceRoot","join","cssWithMappingToString","mediaQuery","dedupe","alreadyImportedModules","length","id","_i","push","fn","memo","stylesInDom","isOldIE","window","document","all","atob","apply","arguments","getTarget","target","parent","querySelector","getElement","styleTarget","HTMLIFrameElement","contentDocument","head","e","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","options","domStyle","refs","j","parts","addStyle","listToStyles","newStyles","base","part","css","media","insertStyleElement","style","insertInto","Error","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","createElement","undefined","attrs","type","nonce","getNonce","addAttrs","el","keys","forEach","setAttribute","obj","update","remove","result","transform","default","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","updateLink","href","applyToTag","newObj","DEBUG","newList","mayRemove","textStore","replaceText","index","replacement","filter","Boolean","styleSheet","cssText","cssNode","createTextNode","childNodes","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","__WEBPACK_EXTERNAL_MODULE__6__","locals","___CSS_LOADER_API_IMPORT___","location","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","extendStatics","b","setPrototypeOf","__proto__","Array","__extends","__","constructor","__assign","assign","__rest","getOwnPropertySymbols","propertyIsEnumerable","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","iterator","v","op","TypeError","pop","getRequest","endpoint","swallowError","maxRetries","doRequest","method","url","postRequest","request","useProxy","Authorization","apiToken","datasourceRequest","error","status","console","log","emptyResultData","refId","datapoints","buildTimeSeries","ALL_APPLICATIONS","ALL_ENDPOINTS","readTime","time","from","Math","floor","Date","valueOf","getTime","to","windowSize","getWindowSize","timeFilter","getTimeKey","msToMin","hoursToMs","hours","store","put","ttl","del","expiry","now","timeout","setTimeout","clearTimeout","instanaOptions","sliReportsCache","getConfiguredSLIs","sliReports","response","sliName","runQuery","sloReport","sloSpecific","sloValue","extractSpecificValueFromSLI","sliResult","buildResultArray","sli","errorBudgetRemaining","buildViolationDistributionTimeSeries","violationDistribution","timestamp","series","greens","reds","greys","granularity","isInvalidQueryInterval","queryIntervalLimit","availableFor","rollup","getDefaultChartGranularity","getPossibleGranularities","maxValues","possibleGranularities","granularities","getDefaultMetricRollupDuration","getPossibleRollups","possibleRollups","rollups","rollupDefinition","rollUp","timeToLiveSnapshotInfoCache","snapshotCache","snapshotInfoCache","catalogCache","typeCache","queryinterval_limit_infra","metric","showAllMetrics","freeTextMetrics","fetchSnapshotsForTarget","snapshots","allMetrics","fetchMultipleMetricsForSnapshots","metrics","extractMetricsFromText","fetchMetricsForSnapshots","freeText","metricsString","split","each","metricString","parse","slice","resultPromises","allResults","res","snapshot","fetchMetricsForSnapshot","snapshotId","timeInterval","timeseries","readTimeSeries","values","aggregation","buildLabel","stableHash","displayMaxMetricValue","maxValue","getMaxMetricValue","buildMaxMetricTarget","convertRelativeToAbsolute","maxMetrics","max_metrics","find","resultLabel","maxLabel","convertMetricNameToMaxLabel","datapoint","getEntityTypes","entityTypes","typesResponse","entry","plugin","sortBy","fetchTypesForTarget","query","fetchSnapshotTypesUrl","entityQuery","showOffline","getMetricsCatalog","metricCategory","catalogResponse","metricId","description","aggregations","entityType","pluginId","buildQuery","buildSnapshotCacheKey","fetchSnapshotContextsUrl","contextsResponse","snapshotInfo","fetchSnapshotUrl","snapshotResponse","reduceSnapshot","compact","includes","pick","correctMeanToSum","secondMultiplier","parseInt","getHostSuffix","labelFormat","timeShift","timeShiftIsValid","omitLabels","versionCache","getVersion","cachedVersion","imageTag","majorVersion","aggregateTarget","targetLabel","customFilters","aggregationFunction","buildAggregationLabel","concatedTargetData","concatTargetData","aggregatedData","dataGroupedByTimestamp","aggregationLabel","timestampData","valuesOfTimestamp","aggregatedValue","toLowerCase","sum","mean","min","max","aggregateDataOfTimestamp","groupBy","buildResult","createTagFilter","tagFilter","tag","operator","stringValue","numberValue","booleanValue","readItemMetrics","getLabel","flatten","items","websitesCache","miscCache","queryinterval_limit_website_metrics","group","entity","fetchAnalyzeMetricsForWebsite","buildAnalyzeWebsiteLabel","getWebsites","websites","groupbyTag","timeFrame","order","by","direction","pagination","ingestionTime","offset","retrievalSize","websitesResponse","getWebsiteTags","websiteTags","tagsResponse","getWebsiteMetricsCatalog","websiteCatalog","transformAggregations","sort","beaconTypes","a","tagFilters","filters","isValid","groupbyTagSecondLevelKey","applicationsCache","queryinterval_limit_app_calls","fetchAnalyzeMetricsForApplication","showWarningCantShowAllResults","canLoadMore","buildAnalyzeApplicationLabel","getApplications","applications","paginateApplications","flattenDeep","pageSet","orderBy","application","results","page","pageSize","pageLimit","queryParameters","totalHits","getApplicationTags","applicationTags","canApplyToSource","canApplyToDestination","getApplicationMetricsCatalog","applicationCallToEntity","getTagEntity","selectedEntity","fetchApplicationMetrics","buildApplicationMetricLabel","servicesCache","getServicesOfApplication","applicationId","services","paginateServices","service","fetchServiceMetrics","buildServiceMetricLabel","endpointsCache","getEndpointsOfService","serviceId","endpoints","paginateEndpoints","fetchEndpointMetrics","endpointId","buildEndpointMetricLabel","selectedApplication","cf","metric_categories","category","instanceSettings","jsonData","instanaUrl","availableGranularities","availableRollups","availableTimeIntervals","dataSourceSlo","dataSourceInfrastructure","dataSourceWebsite","dataSourceApplication","dataSourceService","dataSourceEndpoint","resultCache","DataSource","range","targets","pseudoHash","targetTimeFilter","hide","setPossibleTimeIntervals","millis","convertTimeShiftToMillis","applyTimeShiftOnTimeFilter","omit","mapValues","adjustTimeFilterIfCached","buildTargetWithAppendedDataResult","getApplicationServiceEndpointMetrics","targetData","targetAndData","resultData","applyTimeShiftIfNecessary","aggregateDataIfNecessary","cacheResultIfNecessary","queryinterval_limit_app_metrics","applyTimeShiftOnData","supportsDeltaRequests","hasResult","cachedObj","version","timeshift","newData","aggregateGraphs","hideOriginalGraphs","dt","appendResult","newDeltaData","cachedData","cachedResult","deltaData","matchingCachedData","size","sortedUniqBy","takeRight","t1","t2","newFrom","getDeltaRequestTimestamp","newTo","fromDefault","penultimate","getSloReports","fetchApplications","getTimeFilter","fetchServices","fetchEndpoints","fetchWebsites","getDefaultTimeInterval","parseTimeShift","endsWith","testDatasource","message","title","statusText","versions","props","onInstanaOptionsChange","eventItem","onOptionsChange","currentTarget","debouncedDetectFeatures","onSwitchChange","settings","debounce","detectFeatures","setState","canUseProxy","canQueryOfflineSnapshots","state","render","className","horizontal","required","width","placeholder","onChange","event","suffix","theme","allowSlo","FormWrapper","display","disabled","opacity","pointerEvents","stretch","children","tooltip","searchable","queryKeyword","labelWidth","inputWidth","remainingProps","menuPlacement","isSearchable","Component","isUnmounting","onApplicationChange","onRunQuery","loadServices","loadEndpoints","onServiceChange","onEndpointChange","debouncedRunQuery","onGroupByTagSecondLevelKeyChange","componentDidMount","loadApplications","datasource","updateMetrics","componentWillUnmount","apps","unshift","app","showGroupBySecondLevel","onGroupChange","onApplicationCallToEntityChange","onCallToEntityChange","callToEntity","updateGroups","groups","onFilterChange","addCustomFilter","removeCustomFilter","listFilter","variant","onClick","Switch","checked","onUseFreeTextMetricsChange","loadEntityTypes","useFreeTextMetrics","onFreeTextMetricsChange","onAggregateGraphs","onHideOriginalGraph","onAggregationFunctionChange","showAdditionalSettings","legendFormat","legendFormatPlaceholders","legendFormatTooltips","onLegendFormatChange","onTimeShiftChange","match","legendFormatPlaceholder","setLegendFormatPlaceholder","setLegendFormatTooltip","hidden","invalid","onQueryChange","updateQueryTypes","debouncedEntityTypes","onTypeChange","queryTypes","noOptionsMessage","onSloChange","slo","onSloValueChange","onSloSpecificChange","sloReports","isValidSlo","loadSloReports","val","valid","shouldComponentUpdate","nextProps","nextState","nextContext","onWebsiteChange","website","onBeaconTypeChange","filterMetricsOnType","beacon_types","websiteMetrics","OPERATOR_STRING","OPERATOR_NUMBER","OPERATOR_BOOLEAN","OPERATOR_KEY_VALUE","addTagFilter","filterOperatorsOnType","removeTagFilter","validateChangeAndRun","onOperatorChange","onTagFilterStringValueChange","onTagFilterNumberValueChange","valueAsNumber","operators","canShowStringInput","onTagFilterBooleanValueChange","runDebounced","singleFilter","onMetricChange","canShowMaxMetricValue","onTimeIntervalChange","onAggregationChange","onShowMaxValueChange","onShowAllMetricsChange","availableMetrics","possibleTimeIntervals","possibleAggregations","canShowAggregation","canSelectAggregation","canShowAllMetrics","onCategoryChange","newCategory","selectionReset","changeAndRun","onMetricsFilter","setMetricPlaceholder","filterForEntityType","findMatchingEntityTypes","filterResults","filterEntityTypes","types","newAvailableMetrics","applyFilterToMetricList","isAbleToShowAllMetrics","checkMetricAndRefresh","defaultQuery","nrOfTotalResults","filterResult","filteredMetrics","resetMetricSelection","resetEntityTypeSelection","resetEntitySelection","resetServices","resetEndpoints","resetSLO","setConfigEditor","setQueryEditor"],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../node_modules/postcss-loader/src/index.js??ref--8-2!../../node_modules/sass-loader/lib/loader.js!./plugin.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../node_modules/postcss-loader/src/index.js??ref--8-2!../../node_modules/sass-loader/lib/loader.js!./plugin.css\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--8-1!../../node_modules/postcss-loader/src/index.js??ref--8-2!../../node_modules/sass-loader/lib/loader.js!./plugin.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(true);\n// Module\nexports.push([module.id, \".entityDropdown {\\n  min-width: 80px; }\\n\", \"\",{\"version\":3,\"sources\":[\"plugin.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,eAAe,EAAE\",\"file\":\"plugin.css\",\"sourcesContent\":[\".entityDropdown {\\n  min-width: 80px; }\\n\"]}]);\n// Exports\nmodule.exports = exports;\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","\nvar content = require(\"!!../node_modules/css-loader/dist/cjs.js??ref--8-1!../node_modules/postcss-loader/src/index.js??ref--8-2!../node_modules/sass-loader/lib/loader.js!./instana-grafana.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/dist/cjs.js??ref--8-1!../node_modules/postcss-loader/src/index.js??ref--8-2!../node_modules/sass-loader/lib/loader.js!./instana-grafana.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/dist/cjs.js??ref--8-1!../node_modules/postcss-loader/src/index.js??ref--8-2!../node_modules/sass-loader/lib/loader.js!./instana-grafana.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(true);\n// Module\nexports.push([module.id, \"path[d=\\\"M18.71,7.21a1,1,0,0,0-1.42,0L9.84,14.67,6.71,11.53A1,1,0,1,0,5.29,13l3.84,3.84a1,1,0,0,0,1.42,0l8.16-8.16A1,1,0,0,0,18.71,7.21Z\\\"] {\\n  display: none; }\\n\", \"\",{\"version\":3,\"sources\":[\"instana-grafana.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,aAAa,EAAE\",\"file\":\"instana-grafana.css\",\"sourcesContent\":[\"path[d=\\\"M18.71,7.21a1,1,0,0,0-1.42,0L9.84,14.67,6.71,11.53A1,1,0,1,0,5.29,13l3.84,3.84a1,1,0,0,0,1.42,0l8.16-8.16A1,1,0,0,0,18.71,7.21Z\\\"] {\\n  display: none; }\\n\"]}]);\n// Exports\nmodule.exports = exports;\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { getBackendSrv } from '@grafana/runtime';\nimport { BackendSrvRequest } from '@grafana/runtime/services/backendSrv';\nimport { InstanaOptions } from '../types/instana_options';\nimport { DataSourceInstanceSettings } from '@grafana/data';\n\nexport function getRequest(options: InstanaOptions, endpoint: string, swallowError = false, maxRetries = 1): any {\n  const request = {\n    method: 'GET',\n    url: options.url + endpoint,\n  };\n\n  return doRequest(options, request, swallowError, maxRetries);\n}\n\nexport function postRequest(\n  options: InstanaOptions,\n  endpoint: string,\n  data: {},\n  swallowError = false,\n  maxRetries = 0\n): any {\n  const request = {\n    method: 'POST',\n    url: options.url + endpoint,\n    data: data,\n  };\n\n  return doRequest(options, request, swallowError, maxRetries);\n}\n\nfunction doRequest(\n  options: InstanaOptions,\n  request: BackendSrvRequest,\n  swallowError: boolean,\n  maxRetries: number\n): any {\n  if (!options.useProxy) {\n    request['headers'] = {\n      Authorization: 'apiToken ' + options.apiToken,\n    };\n  }\n\n  return getBackendSrv()\n    .datasourceRequest(request)\n    .catch((error) => {\n      if (error.status === 429) {\n        throw new Error('API limit is reached.');\n        return;\n      }\n\n      if (swallowError && (error.status >= 400 || error.status < 500)) {\n        console.log(error);\n        return;\n      }\n      if (maxRetries > 0) {\n        return doRequest(options, request, swallowError, maxRetries - 1);\n      }\n      throw error;\n    });\n}\n\nexport function instanaUrl(instanceSettings: DataSourceInstanceSettings<InstanaOptions>): string {\n  if (instanceSettings.jsonData.useProxy) {\n    return instanceSettings.url + '/instana'; // to match proxy route in plugin.json\n  } else {\n    return instanceSettings.jsonData.url;\n  }\n}\n","import { TimeSeries, TimeSeriesPoints } from '@grafana/data';\n\nexport function emptyResultData(refId: string): TimeSeries {\n  return {\n    target: refId,\n    datapoints: [],\n  };\n}\n\nexport function buildTimeSeries(label: string, refId: string, datapoints: TimeSeriesPoints): TimeSeries {\n  return {\n    target: label,\n    refId: refId,\n    datapoints: datapoints,\n  };\n}\n","/* CONFIG */\nexport const PAGINATION_LIMIT = 15; // pagesize=200 => 3000 results in dropdown (~30sec.)\nexport const CACHE_MAX_AGE = 60000;\nexport const SEPARATOR = '|';\n\n/* CATEGORIES */\nexport const BUILT_IN_METRICS = 0;\nexport const CUSTOM_METRICS = 1;\nexport const ANALYZE_APPLICATION_METRICS = 2;\nexport const ANALYZE_WEBSITE_METRICS = 3;\nexport const APPLICATION_SERVICE_ENDPOINT_METRICS = 4; // replaces previous ->\n// APPLICATION_METRICS = '4';\n// SERVICE_METRICS = '5';\n// ENDPOINT_METRICS = '6';\nexport const SLO_INFORMATION = 7;\n\n/* DROPDOWN DEFAULTS */\nexport const ALL_APPLICATIONS = '-- No Application Filter --';\nexport const ALL_SERVICES = '-- No Service Filter --';\nexport const ALL_ENDPOINTS = '-- No Endpoint Filter --';\n\n/* PLACEHOLDER */\nexport const PLEASE_SPECIFY = 'Please specify';\n","import { TimeRange } from '@grafana/data/types/time';\nimport TimeFilter from '../types/time_filter';\nimport { SEPARATOR } from '../GlobalVariables';\n\nexport function readTime(time: TimeRange): TimeFilter {\n  const from = Math.floor(new Date(time!.from.valueOf()).getTime() / 1000) * 1000;\n  const to = Math.floor(new Date(time!.to.valueOf()).getTime() / 1000) * 1000;\n  return {\n    from: from,\n    to: to,\n    windowSize: to - from,\n  };\n}\n\nexport function getWindowSize(timeFilter: TimeFilter): number {\n  return timeFilter.from ? timeFilter.to - timeFilter.from : timeFilter.windowSize;\n}\n\nexport function getTimeKey(timeFilter: TimeFilter): string {\n  // time might be part of a cache key as this can cause different results\n  return msToMin(timeFilter.from) + SEPARATOR + msToMin(timeFilter.to);\n}\n\nfunction msToMin(time: number): number {\n  return Math.floor(time / 60000);\n}\n\nexport function hoursToMs(hours: any): number {\n  if (hours > 0) {\n    return hours * 60 * 60 * 1000;\n  }\n  return 0;\n}\n","export default class Cache<T> {\n  store: any;\n\n  constructor() {\n    this.store = {};\n  }\n\n  put(key: string, value: T, ttl = 60000): void {\n    if (key === undefined || value === undefined) {\n      return;\n    }\n\n    this.del(key);\n    this.store[key] = {\n      value,\n      expiry: Date.now() + ttl,\n      timeout: setTimeout(() => {\n        this.del(key);\n      }, ttl),\n    };\n  }\n\n  get(key: string): T {\n    var item = this.store[key];\n    if (item && !(item.expiry && item.expiry > Date.now())) {\n      this.del(key);\n      item = undefined;\n    }\n    return item && item.value;\n  }\n\n  del(key: string): void {\n    if (this.store.hasOwnProperty(key)) {\n      clearTimeout(this.store[key].timeout);\n      delete this.store[key];\n    }\n  }\n}\n","import { SelectableValue, TimeSeries, TimeSeriesPoints } from '@grafana/data';\nimport { buildTimeSeries, emptyResultData } from '../util/target_util';\nimport { InstanaOptions } from '../types/instana_options';\nimport { InstanaQuery } from '../types/instana_query';\nimport { getRequest } from '../util/request_handler';\nimport { getWindowSize } from '../util/time_util';\nimport TimeFilter from '../types/time_filter';\nimport Cache from '../cache';\nimport _ from 'lodash';\n\nexport class DataSourceSlo {\n  sliReportsCache: Cache<Promise<SelectableValue[]>>;\n  instanaOptions: InstanaOptions;\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.sliReportsCache = new Cache<Promise<SelectableValue[]>>();\n  }\n\n  getConfiguredSLIs(): Promise<SelectableValue[]> {\n    let sliReports = this.sliReportsCache.get('sliReports');\n    if (sliReports) {\n      return sliReports;\n    }\n\n    sliReports = getRequest(this.instanaOptions, '/api/settings/sli').then((response: any) =>\n      _.map(response.data, (r) => {\n        return {\n          key: r.id,\n          label: r.sliName,\n        };\n      })\n    );\n\n    this.sliReportsCache.put('sliReports', sliReports);\n    return sliReports;\n  }\n\n  runQuery(target: InstanaQuery, timeFilter: TimeFilter) {\n    //avoid involid calls\n    if (\n      !target ||\n      !target.sloReport ||\n      !target.sloReport.key ||\n      !target.sloSpecific ||\n      !target.sloSpecific.key ||\n      !target.sloValue\n    ) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    let endpoint =\n      '/api/sli/report/' +\n      target.sloReport.key +\n      '?from=' +\n      timeFilter.from +\n      '&to=' +\n      timeFilter.to +\n      '&slo=' +\n      target.sloValue;\n    return getRequest(this.instanaOptions, endpoint).then((response: any) => {\n      return this.extractSpecificValueFromSLI(target, response.data, timeFilter);\n    });\n  }\n\n  extractSpecificValueFromSLI(target: InstanaQuery, sliResult: any, timeFilter: TimeFilter) {\n    if (target.sloSpecific.key === 'SLI') {\n      return [\n        buildTimeSeries(target.sloSpecific.label!, target.refId, this.buildResultArray(sliResult.sli, timeFilter.to)),\n      ];\n    } else if (target.sloSpecific.key === 'Remaining Error Budget') {\n      return [\n        buildTimeSeries(\n          target.sloSpecific.label!,\n          target.refId,\n          this.buildResultArray(sliResult.errorBudgetRemaining, timeFilter.to)\n        ),\n      ];\n    } else if (target.sloSpecific.key === 'Timeseries') {\n      return this.buildViolationDistributionTimeSeries(target, sliResult.violationDistribution, timeFilter);\n    }\n\n    return [emptyResultData(target.refId)];\n  }\n\n  buildResultArray(result: number, timestamp: number): TimeSeriesPoints {\n    return [[result, timestamp]];\n  }\n\n  buildViolationDistributionTimeSeries(target: InstanaQuery, series: any, timeFilter: TimeFilter): TimeSeries[] {\n    const greens: any[] = [];\n    const reds: any[] = [];\n    const greys: any[] = [];\n\n    let granularity = getWindowSize(timeFilter) / Object.keys(series).length;\n    _.forEach(series, (value: number, index: number) => {\n      if (value === 1) {\n        greens.push([1, timeFilter.from + index * granularity]);\n      } else if (value === 0) {\n        greys.push([1, timeFilter.from + index * granularity]);\n      } else if (value === -1) {\n        reds.push([1, timeFilter.from + index * granularity]);\n      }\n    });\n\n    const result: TimeSeries[] = [];\n    result.push(buildTimeSeries('No violation', target.refId, greens));\n    result.push(buildTimeSeries('Violation', target.refId, reds));\n    result.push(buildTimeSeries('No data', target.refId, greys));\n\n    return result;\n  }\n}\n","/**\n * Do not remove the commented stuff.\n */\nexport default [\n  {\n    label: 'Infrastructure built-in metrics',\n    key: 0,\n  },\n  {\n    label: 'Infrastructure custom metrics',\n    key: 1,\n  },\n  {\n    // replaces Application metrics(4) & Service metrics(5) & Endpoint metrics(6)\n    label: 'Application/service/endpoint metrics',\n    key: 4,\n  },\n  {\n    label: 'Analyze application calls',\n    key: 2,\n  },\n  {\n    label: 'Analyze website',\n    key: 3,\n  },\n  {\n    label: 'SLO information',\n    key: 7,\n  },\n];\n","/**\n * Util method to validate query intervals which are too big.\n *\n * @param windowSize in ms\n * @param queryIntervalLimit in ms\n */\nexport function isInvalidQueryInterval(windowSize: number, queryIntervalLimit?: number): boolean {\n  if (queryIntervalLimit) {\n    if (queryIntervalLimit > 0) {\n      return Math.floor(windowSize / 1000) * 1000 > queryIntervalLimit;\n    }\n    return false;\n  }\n\n  return false;\n}\n","export default [\n  {\n    value: 1, // 1s\n    label: '1s',\n  },\n  {\n    value: 5, // 5s\n    label: '5s',\n  },\n  {\n    value: 10, // 10s\n    label: '10s',\n  },\n  {\n    value: 60, // 1m\n    label: '1min',\n  },\n  {\n    value: 60 * 5, // 5m\n    label: '5min',\n  },\n  {\n    value: 60 * 10, // 10m\n    label: '10min',\n  },\n  {\n    value: 60 * 60, // 1h\n    label: '1h',\n  },\n  {\n    value: 60 * 60 * 5, // 5h\n    label: '5h',\n  },\n  {\n    value: 60 * 60 * 10, // 10h\n    label: '10h',\n  },\n  {\n    value: 60 * 60 * 24, // 1d\n    label: '1d',\n  },\n  {\n    value: 60 * 60 * 24 * 5, // 5d\n    label: '5d',\n  },\n  {\n    value: 60 * 60 * 24 * 10, // 10d\n    label: '10d',\n  },\n];\n","export default [\n  {\n    availableFor: 1000 * 60 * 60 * 24, // 1d\n    rollup: 1000, // 1s\n    label: '1s',\n  },\n  {\n    availableFor: 1000 * 60 * 60 * 24, // 1d\n    rollup: 1000 * 5, // 5s\n    label: '5s',\n  },\n  {\n    availableFor: 1000 * 60 * 60 * 24 * 31, // 1 month\n    rollup: 1000 * 60, // 1m\n    label: '1min',\n  },\n  {\n    availableFor: 1000 * 60 * 60 * 24 * 31 * 3, // 3 months\n    rollup: 1000 * 60 * 5, // 5m\n    label: '5min',\n  },\n  {\n    availableFor: 1000 * 60 * 60 * 24 * 31 * 12, // 1 year aka forever\n    rollup: 1000 * 60 * 60, // 1h\n    label: '1h',\n  },\n];\n","import granularities from '../lists/granularities';\nimport TimeFilter from '../types/time_filter';\nimport rollups from '../lists/rollups';\nimport Selectable from '../types/selectable';\n\nconst MAX_DATAPOINTS_ANALYZE = 600;\nconst MAX_DATAPOINTS_INFRASTRUCTURE = 800;\nconst UI_DATAPOINTS_ANALYZE = 80;\n\nfunction currentTime() {\n  return Date.now();\n}\n\nfunction getWindowSize(timeFilter: TimeFilter): number {\n  return timeFilter.from ? timeFilter.to - timeFilter.from : timeFilter.windowSize;\n}\n\nexport function getDefaultChartGranularity(windowSize: number): Selectable {\n  return getPossibleGranularities(windowSize, UI_DATAPOINTS_ANALYZE)[0];\n}\n\nexport function getPossibleGranularities(windowSize: number, maxValues = MAX_DATAPOINTS_ANALYZE): Selectable[] {\n  let possibleGranularities = granularities.filter(\n    (granularity) => windowSize / 1000 / granularity.value <= maxValues && granularity.value * 1000 <= windowSize\n  );\n\n  // window sizes of this length and up have a granularity of at least 1h\n  if (windowSize > 48000001) {\n    possibleGranularities = possibleGranularities.filter((granularity) => granularity.value >= 3600);\n  }\n\n  if (windowSize >= 1800000) {\n    possibleGranularities = possibleGranularities.filter((granularity) => granularity.value >= 60);\n  }\n\n  if (possibleGranularities.length > 0) {\n    return possibleGranularities.map((granularity) => ({\n      key: granularity.value.toString(),\n      label: granularity.label,\n    }));\n  }\n\n  return [\n    {\n      key: granularities[granularities.length - 1].value.toString(),\n      label: granularities[granularities.length - 1].label,\n    },\n  ];\n}\n\nexport function getDefaultMetricRollupDuration(timeFilter: TimeFilter): Selectable {\n  return getPossibleRollups(timeFilter)[0];\n}\n\nexport function getPossibleRollups(timeFilter: TimeFilter): Selectable[] {\n  // Ignoring time differences for now since small time differences\n  // can be accepted. This time is only used to calculate the rollup.\n  const now = currentTime();\n  const windowSize = getWindowSize(timeFilter);\n\n  let possibleRollups = rollups\n    .filter((rollupDefinition) => timeFilter.from >= now - rollupDefinition.availableFor)\n    .filter((rollUp) => windowSize >= rollUp.rollup && windowSize / rollUp.rollup <= MAX_DATAPOINTS_INFRASTRUCTURE);\n\n  if (possibleRollups.length > 0) {\n    return possibleRollups.map((rollup) => ({\n      key: rollup.rollup.toString(),\n      label: rollup.label,\n    }));\n  }\n\n  return [\n    {\n      key: rollups[rollups.length - 1].rollup.toString(),\n      label: rollups[rollups.length - 1].label,\n    },\n  ];\n}\n","export default [\n  {\n    key: 'cpu.used', // metric.key\n    value: 'cpu.count', // value of the metric found in GET /snapshots/{snapshotId}\n    label: 'cpu.max', // label that shall be shown as target in graph\n  },\n  {\n    key: 'memory.used',\n    value: 'memory.total',\n    label: 'memory.max',\n  },\n  {\n    key: 'openFiles.used',\n    value: 'openFiles.max',\n    label: 'openFiles.max',\n  },\n];\n","import { SelectableValue } from '@grafana/data';\nimport { InstanaOptions } from '../types/instana_options';\nimport { InstanaQuery } from '../types/instana_query';\nimport { getRequest } from '../util/request_handler';\nimport TimeFilter from '../types/time_filter';\nimport Cache from '../cache';\nimport { CUSTOM_METRICS, SEPARATOR } from '../GlobalVariables';\nimport _ from 'lodash';\nimport { getTimeKey, hoursToMs } from '../util/time_util';\nimport { isInvalidQueryInterval } from '../util/queryInterval_check';\nimport { emptyResultData } from '../util/target_util';\nimport { getDefaultMetricRollupDuration } from '../util/rollup_granularity_util';\nimport max_metrics from '../lists/max_metrics';\n\nexport class DataSourceInfrastructure {\n  instanaOptions: InstanaOptions;\n  snapshotCache: Cache<Promise<SelectableValue[]>>;\n  snapshotInfoCache: Cache<Promise<SelectableValue[]>>;\n  catalogCache: Cache<Promise<SelectableValue[]>>;\n  typeCache: Cache<Promise<SelectableValue[]>>;\n  timeToLiveSnapshotInfoCache: number = 60 * 60 * 1000;\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.snapshotCache = new Cache<Promise<SelectableValue[]>>();\n    this.snapshotInfoCache = new Cache<Promise<SelectableValue[]>>();\n    this.catalogCache = new Cache<Promise<SelectableValue[]>>();\n    this.typeCache = new Cache<Promise<SelectableValue[]>>();\n  }\n\n  runQuery(target: InstanaQuery, timeFilter: TimeFilter) {\n    // do not try to execute to big queries\n    if (isInvalidQueryInterval(timeFilter.windowSize, hoursToMs(this.instanaOptions.queryinterval_limit_infra))) {\n      throw new Error(\n        'Limit for maximum selectable windowsize exceeded, max is: ' +\n          this.instanaOptions.queryinterval_limit_infra +\n          ' hours'\n      );\n    }\n\n    // do not try to retrieve data without selected metric\n    if ((!target.metric || !target.metric.key) && !target.showAllMetrics && !target.freeTextMetrics) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    // for every target, fetch snapshots in the selected timeframe that satisfy the lucene query.\n    return this.fetchSnapshotsForTarget(target, timeFilter).then((snapshots) => {\n      if (target.showAllMetrics) {\n        // only available for custom metrics\n        console.log(target.allMetrics);\n        return this.fetchMultipleMetricsForSnapshots(target, snapshots, timeFilter, target.allMetrics);\n      } else if (target.freeTextMetrics) {\n        // only available for custom metrics\n        const metrics = this.extractMetricsFromText(target.freeTextMetrics);\n        return this.fetchMultipleMetricsForSnapshots(target, snapshots, timeFilter, metrics);\n      } else {\n        return this.fetchMetricsForSnapshots(target, snapshots, timeFilter, target.metric);\n      }\n    });\n  }\n\n  extractMetricsFromText(freeText: string): string[] {\n    const metricsString = freeText.replace(/\\s/g, '').split(',');\n    let metrics: string[] = [];\n    _.each(metricsString, (metricString) => metrics.push(JSON.parse('{ \"key\": \"' + metricString + '\"}')));\n\n    if (metrics.length > 4) {\n      metrics = metrics.slice(0, 4); // API supports up to 4 metrics at once\n    }\n\n    return metrics;\n  }\n\n  fetchMultipleMetricsForSnapshots(target: InstanaQuery, snapshots: any, timeFilter: TimeFilter, metrics: any) {\n    const resultPromises: any = [];\n    _.forEach(metrics, (metric) => {\n      console.log(metric);\n      resultPromises.push(this.fetchMetricsForSnapshots(target, snapshots, timeFilter, metric));\n    });\n\n    return Promise.all(resultPromises).then((allResults) => {\n      const allMetrics: any = [];\n      allResults.forEach((result: any) => result.forEach((s: any) => allMetrics.push(s)));\n      return allMetrics;\n    });\n  }\n\n  fetchMetricsForSnapshots(target: InstanaQuery, snapshots: any, timeFilter: TimeFilter, metric: any) {\n    let maxValues: any = [];\n    let res = _.map(snapshots, (snapshot, index) => {\n      // ...fetch the metric data for every snapshot in the results.\n      return this.fetchMetricsForSnapshot(snapshot.snapshotId, timeFilter, target.timeInterval.key, metric).then(\n        (response: any) => {\n          let timeseries = this.readTimeSeries(response.data.values, target.aggregation, timeFilter);\n          let result = {\n            target: this.buildLabel(snapshot.response, snapshot.host, target, index, metric),\n            datapoints: _.map(timeseries, (value) => [value.value, value.timestamp]),\n            refId: target.refId,\n            key: target.stableHash,\n          };\n\n          if (target.displayMaxMetricValue) {\n            const maxValue = this.getMaxMetricValue(target.metric, snapshot);\n            maxValues.push(this.buildMaxMetricTarget(target, timeseries, maxValue, result.target));\n            result.datapoints = this.convertRelativeToAbsolute(result.datapoints, maxValue);\n          }\n\n          return result;\n        }\n      );\n    });\n\n    return Promise.all(res).then((allResults) => {\n      if (target.displayMaxMetricValue) {\n        allResults = _.concat(res, maxValues);\n      }\n      return Promise.all(allResults);\n    });\n  }\n\n  getMaxMetricValue(metric: any, snapshot: any): number {\n    const maxMetrics: any = max_metrics;\n    return snapshot.response.data.data[_.find(maxMetrics, (m: any) => m.key === metric.key).value];\n  }\n\n  buildMaxMetricTarget(target: any, timeseries: any, maxValue: any, resultLabel: any) {\n    let datapoints = _.map(timeseries, (series) => {\n      return [maxValue, series.timestamp];\n    });\n\n    let maxLabel = this.convertMetricNameToMaxLabel(target.metric);\n\n    return {\n      target: resultLabel + ' ' + maxLabel,\n      datapoints: datapoints,\n      refId: target.refId,\n      key: target.stableHash + maxLabel,\n    };\n  }\n\n  convertMetricNameToMaxLabel(metric: any): string {\n    const maxMetrics: any = max_metrics;\n    return _.find(maxMetrics, (m) => m.key === metric.key).label;\n  }\n\n  convertRelativeToAbsolute(datapoints: any, maxValue: any) {\n    return _.map(datapoints, (datapoint) => {\n      if (datapoint[0]) {\n        return [datapoint[0] * maxValue, datapoint[1]];\n      }\n      return [null, datapoint[1]];\n    });\n  }\n\n  getEntityTypes(): Promise<SelectableValue[]> {\n    let entityTypes = this.typeCache.get('entityTypes');\n    if (entityTypes) {\n      return entityTypes;\n    }\n\n    entityTypes = getRequest(this.instanaOptions, '/api/infrastructure-monitoring/catalog/plugins').then(\n      (typesResponse: any) => {\n        const result = typesResponse.data.map((entry: any) => ({\n          key: entry.plugin,\n          label: entry.label,\n        }));\n\n        result.push({\n          key: 'regionEntity',\n          label: 'Region',\n        });\n\n        return _.sortBy(result, 'label');\n      }\n    );\n\n    this.typeCache.put('entityTypes', entityTypes);\n\n    return entityTypes;\n  }\n\n  fetchTypesForTarget(query: InstanaQuery, timeFilter: TimeFilter): any {\n    const fetchSnapshotTypesUrl =\n      `/api/snapshots/types` +\n      `?q=${encodeURIComponent(query.entityQuery)}` +\n      `&from=${timeFilter.from}` +\n      `&to=${timeFilter.to}` +\n      (this.instanaOptions.showOffline ? `` : `&time=${timeFilter.to}`);\n    return getRequest(this.instanaOptions, fetchSnapshotTypesUrl);\n  }\n\n  getMetricsCatalog(plugin: SelectableValue, metricCategory: number): Promise<SelectableValue[]> {\n    const key = plugin.key + '|' + metricCategory;\n\n    let metrics = this.catalogCache.get(key);\n    if (metrics) {\n      return metrics;\n    }\n\n    const filter = metricCategory === CUSTOM_METRICS ? 'custom' : 'builtin';\n    metrics = getRequest(\n      this.instanaOptions,\n      `/api/infrastructure-monitoring/catalog/metrics/${plugin.key}?filter=${filter}`\n    ).then((catalogResponse: any) =>\n      catalogResponse.data.map((entry: any) => ({\n        key: entry.metricId,\n        label: entry.label,\n        description: entry.metricId,\n        aggregations: [\n          { key: 'MEAN', label: 'MEAN' },\n          { key: 'SUM', label: 'SUM' },\n        ],\n        entityType: entry.pluginId,\n      }))\n    );\n\n    this.catalogCache.put(key, metrics);\n\n    return metrics;\n  }\n\n  fetchSnapshotsForTarget(target: InstanaQuery, timeFilter: TimeFilter) {\n    const query = this.buildQuery(target);\n    const key = this.buildSnapshotCacheKey(query, timeFilter);\n\n    let snapshots = this.snapshotCache.get(key);\n    if (snapshots) {\n      return snapshots;\n    }\n\n    const fetchSnapshotContextsUrl =\n      `/api/snapshots/context` +\n      `?q=${query}` +\n      `&from=${timeFilter.from}` +\n      `&to=${timeFilter.to}` +\n      (this.instanaOptions.showOffline ? `` : `&time=${timeFilter.to}&size=100`);\n\n    snapshots = getRequest(this.instanaOptions, fetchSnapshotContextsUrl)\n      .then((contextsResponse: any) => {\n        return Promise.all(\n          contextsResponse.data.map(({ snapshotId, host }: any) => {\n            let snapshotInfo = this.snapshotInfoCache.get(snapshotId);\n            if (snapshotInfo) {\n              return snapshotInfo;\n            }\n\n            const fetchSnapshotUrl =\n              `/api/snapshots/${snapshotId}` +\n              (this.instanaOptions.showOffline\n                ? `?from=${timeFilter.from}&to=${timeFilter.to}`\n                : `?time=${timeFilter.to}`); // @see SnapshotApiResource#getSnapshot\n\n            snapshotInfo = getRequest(this.instanaOptions, fetchSnapshotUrl, true).then((snapshotResponse: any) => {\n              // check for undefined because the fetchSnapshotContexts is buggy\n              if (snapshotResponse !== undefined) {\n                return {\n                  snapshotId,\n                  host,\n                  response: this.reduceSnapshot(snapshotResponse),\n                };\n              }\n\n              return null;\n            });\n\n            this.snapshotInfoCache.put(snapshotId, snapshotInfo, this.timeToLiveSnapshotInfoCache);\n            return snapshotInfo;\n          })\n        );\n      })\n      .then((response: any) => {\n        // undefined items need to be removed, because the fetchSnapshotContexts is buggy in the backend, maybe can be removed in the future\n        return _.compact(response);\n      });\n\n    this.snapshotCache.put(key, snapshots);\n    return snapshots;\n  }\n\n  buildQuery(target: InstanaQuery): string {\n    // check for entity.pluginId or entity.selfType, because otherwise the backend has a problem with `AND entity.pluginId`\n    if (`${target.entityQuery}`.includes('entity.pluginId:') || `${target.entityQuery}`.includes('entity.selfType:')) {\n      return encodeURIComponent(`${target.entityQuery}`);\n    } else {\n      return encodeURIComponent(`${target.entityQuery} AND entity.pluginId:${target.entityType.key}`);\n    }\n  }\n\n  buildSnapshotCacheKey(query: string, timeFilter: TimeFilter): string {\n    return query + SEPARATOR + getTimeKey(timeFilter);\n  }\n\n  reduceSnapshot(snapshotResponse: any) {\n    // reduce data to used label formatting values\n    snapshotResponse.data = _.pick(snapshotResponse.data, ['id', 'label', 'plugin', 'data']);\n    return snapshotResponse;\n  }\n\n  readTimeSeries(values: any, aggregation: SelectableValue, timeFilter: TimeFilter) {\n    if (aggregation && aggregation.key === 'SUM') {\n      return this.correctMeanToSum(values, timeFilter);\n    }\n    return values;\n  }\n\n  correctMeanToSum(values: any, timeFilter: TimeFilter) {\n    const secondMultiplier = parseInt(getDefaultMetricRollupDuration(timeFilter).key, 10) / 1000;\n    return _.map(values, (value) => {\n      return {\n        value: value.value ? value.value * secondMultiplier : null,\n        timestamp: value.timestamp,\n      };\n    });\n  }\n\n  fetchMetricsForSnapshot(snapshotId: string, timeFilter: TimeFilter, rollup: number, metric: any) {\n    let url =\n      `/api/metrics?metric=${metric.key}` +\n      `&from=${timeFilter.from}` +\n      `&to=${timeFilter.to}` +\n      `&rollup=${rollup}` +\n      `&fillTimeSeries=true` +\n      `&snapshotId=${snapshotId}`;\n    return getRequest(this.instanaOptions, url);\n  }\n\n  getHostSuffix(host: string): string {\n    if (host) {\n      return ' (on host \"' + host + '\")';\n    }\n    return '';\n  }\n\n  buildLabel(snapshotResponse: any, host: any, target: InstanaQuery, index: any, metric: any): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', snapshotResponse.data.label);\n      label = _.replace(label, '$plugin', snapshotResponse.data.plugin); // not documented\n      label = _.replace(label, '$snapshot', snapshotResponse.data.id); // not documented\n      label = _.replace(label, '$host', host ? host : 'unknown');\n      label = _.replace(label, '$pid', _.get(snapshotResponse.data, ['data', 'pid'], ''));\n      label = _.replace(label, '$type', _.get(snapshotResponse.data, ['data', 'type'], ''));\n      label = _.replace(label, '$name', _.get(snapshotResponse.data, ['data', 'name'], ''));\n      label = _.replace(label, '$service', _.get(snapshotResponse.data, ['data', 'service_name'], ''));\n      if (target.freeTextMetrics) {\n        label = _.replace(label, '$metric', metric.key);\n      } else {\n        label = _.replace(label, '$metric', _.get(target, ['metric', 'key'], 'n/a'));\n      }\n      label = _.replace(label, '$index', index + 1);\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n    return target.timeShift && target.timeShiftIsValid\n      ? snapshotResponse.data.label + this.getHostSuffix(host) + ' - ' + target.timeShift\n      : snapshotResponse.data.label + this.getHostSuffix(host);\n  }\n}\n","import _ from 'lodash';\n\nimport TimeFilter from '../types/time_filter';\n\nconst omitLabels = [\n  'refId',\n  'pluginId',\n  'showWarningCantShowAllResults',\n  'timeShiftIsValid',\n  'useFreeTextMetrics',\n  'showGroupBySecondLevel',\n  'canShowAllMetrics',\n  'timeFilter',\n  'stableHash',\n];\n\nexport function generateStableHash(obj: any): string {\n  let pseudoHash = _.omit(obj, omitLabels);\n  pseudoHash = _.mapValues(pseudoHash, (value: any) => {\n    // to reduce overhead of interface Selectable\n    if (value != null && typeof value === 'object' && 'key' in value) {\n      value = value.key;\n    }\n\n    return value;\n  });\n  return JSON.stringify(pseudoHash);\n}\n\n/*\n  Check if two time filters are overlapping.\n  Return true when:\n  from |-------------------| to (t2)\n              from |--------------------| to (t1)\n  Returns false when:\n     from |-------------------| to (t2)\nfrom |----------------------------------------| to (t1)\n  from |-------------------| to (t2)\n                        from |-------------------| to (t1)\n*/\nexport function hasIntersection(t1: TimeFilter, t2: TimeFilter): boolean {\n  return t1.from < t2.to && t1.from > t2.from; // t1.windowSize === t2.windowSize\n}\n\n/*\n  Appends new found items to already existing data in cache.\n  Also removes old data accordingly (e.g. if 4 new datapoints were added,\n  the corresponding oldest four datapoints are removed).\n*/\nexport function appendData(newDeltaData: any, cachedData: any): any {\n  _.each(newDeltaData, (deltaData) => {\n    let matchingCachedData = _.find(cachedData, (o) => o.key === deltaData.key);\n    if (matchingCachedData && deltaData.datapoints) {\n      const size = matchingCachedData.datapoints.length;\n      let datapoints = deltaData.datapoints.concat(matchingCachedData.datapoints);\n      datapoints = _.sortedUniqBy(\n        datapoints.sort((a: any, b: any) => a[1] - b[1]),\n        (a: any) => a[1]\n      );\n      matchingCachedData.datapoints = _.takeRight(datapoints, size);\n      matchingCachedData.target = deltaData.target;\n    } else {\n      cachedData.push(deltaData);\n    }\n  });\n  return cachedData;\n}\n","import Cache from '../cache';\nimport { getRequest } from './request_handler';\nimport { InstanaOptions } from '../types/instana_options';\n\nconst versionCache: Cache<number> = new Cache<number>();\n\n/*\n  Get version of current Instana backend and cache it for 10 minutes.\n  This should be the ONLY way to retrieve any information about the Instana backend version.\n */\nexport default function getVersion(options: InstanaOptions) {\n  let cachedVersion = versionCache.get('version');\n  if (cachedVersion) {\n    return Promise.resolve(cachedVersion);\n  }\n\n  return getRequest(options, '/api/instana/version').then(\n    (result: any) => {\n      if (result.data && result.data.imageTag) {\n        const majorVersion = parseInt(result.data.imageTag.split('.', 2)[1], 10) || null;\n        if (majorVersion) {\n          versionCache.put(options.url, majorVersion, 600000);\n        }\n        return majorVersion;\n      }\n      return null;\n    },\n    (error: any) => {\n      return null;\n    }\n  );\n}\n","import _ from 'lodash';\nimport { InstanaQuery } from '../types/instana_query';\n\nexport function aggregateTarget(data: any, target: InstanaQuery) {\n  const targetLabel = buildAggregationLabel(target);\n  data = _.filter(data, (d) => d.target !== targetLabel); // filter out any previously calculated aggregations\n  let concatedTargetData = concatTargetData(data);\n\n  let dataGroupedByTimestamp = _.groupBy(concatedTargetData, function (d) {\n    return d[1];\n  });\n\n  let aggregatedData = aggregateDataOfTimestamp(dataGroupedByTimestamp, target.aggregationFunction.label!);\n  aggregatedData = _.sortBy(aggregatedData, [\n    function (datapoint) {\n      return datapoint[1];\n    },\n  ]);\n\n  return buildResult(aggregatedData, target.refId, targetLabel);\n}\n\nfunction concatTargetData(data: any) {\n  let result: any = [];\n  _.each(data, (entry) => {\n    result = _.concat(result, entry.datapoints);\n  });\n  return result;\n}\n\nfunction aggregateDataOfTimestamp(dataGroupedByTimestamp: any, aggregationLabel: string) {\n  let result: any = [];\n  _.each(dataGroupedByTimestamp, (timestampData, timestamp) => {\n    let valuesOfTimestamp = _.map(timestampData, (datapoint) => {\n      return datapoint[0];\n    });\n    let aggregatedValue = aggregate(aggregationLabel, valuesOfTimestamp);\n    result.push([aggregatedValue, parseInt(timestamp, 10)]);\n  });\n  return result;\n}\n\nfunction aggregate(aggregation: string, data: any) {\n  if (aggregation.toLowerCase() === 'sum') {\n    return _.sum(data);\n  } else if (aggregation.toLowerCase() === 'mean') {\n    return _.mean(data);\n  } else if (aggregation.toLowerCase() === 'min') {\n    return _.min(data);\n  } else if (aggregation.toLowerCase() === 'max') {\n    return _.max(data);\n  } else {\n    //apply not aggregation\n    return data;\n  }\n}\n\nfunction buildResult(aggregatedData: any, refId: string, target: string) {\n  return {\n    datapoints: aggregatedData,\n    refId: refId,\n    target: target,\n  };\n}\n\nfunction buildAggregationLabel(target: InstanaQuery): string {\n  if (target.showAllMetrics) {\n    if (target.allMetrics.length > 1) {\n      if (target.customFilters && target.customFilters.length > 0) {\n        let label = '';\n        _.each(target.customFilters, (filter, index) => {\n          label += filter;\n          if (index !== target.customFilters.length - 1) {\n            label += '.';\n          }\n        });\n        label = label + ' (' + target.aggregationFunction.label + ')';\n        return label;\n      } else {\n        return target.aggregationFunction.label!;\n      }\n    } else {\n      return target.allMetrics[0].key + ' (' + target.aggregationFunction.label + ')';\n    }\n  } else {\n    return target.metric.key + ' (' + target.aggregationFunction.label + ')';\n  }\n}\n","import TagFilter from '../types/tag_filter';\nimport _ from 'lodash';\nimport { InstanaQuery } from '../types/instana_query';\n\nexport function createTagFilter(filter: TagFilter) {\n  let tagFilter = {\n    name: filter.tag.key,\n    operator: filter.operator.key,\n    value: filter.stringValue,\n  };\n\n  if ('NUMBER' === filter.tag.type) {\n    if (filter.numberValue !== null) {\n      tagFilter.value = filter.numberValue.toString();\n    }\n  } else if ('BOOLEAN' === filter.tag.type) {\n    tagFilter.value = filter.booleanValue.toString();\n  }\n\n  return tagFilter;\n}\n\nexport function readItemMetrics(target: InstanaQuery, response: any, getLabel: any) {\n  if (!response.data) {\n    return response;\n  }\n\n  // as we map two times we need to flatten the result\n  return _.flatten(\n    response.data.items.map((item: any, index: number) => {\n      return _.map(item.metrics, (value, key) => {\n        return {\n          target: getLabel(target, item, key, index),\n          datapoints: _.map(value, (metric) => [metric[1], metric[0]]),\n          refId: target.refId,\n          key: target.stableHash,\n        };\n      });\n    })\n  );\n}\n","import { SelectableValue } from '@grafana/data';\nimport { InstanaOptions } from '../types/instana_options';\nimport Cache from '../cache';\nimport _ from 'lodash';\nimport TimeFilter from '../types/time_filter';\nimport { getTimeKey, getWindowSize, hoursToMs } from '../util/time_util';\nimport BeaconGroupBody from '../types/beacon_group_body';\nimport { getRequest, postRequest } from '../util/request_handler';\nimport { getDefaultChartGranularity } from '../util/rollup_granularity_util';\nimport { InstanaQuery } from '../types/instana_query';\nimport { createTagFilter, readItemMetrics } from '../util/analyze_util';\nimport { emptyResultData } from '../util/target_util';\nimport { isInvalidQueryInterval } from '../util/queryInterval_check';\n\nexport class DataSourceWebsite {\n  instanaOptions: InstanaOptions;\n  websitesCache: Cache<Promise<SelectableValue[]>>;\n  miscCache: Cache<any>;\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.websitesCache = new Cache<Promise<SelectableValue[]>>();\n    this.miscCache = new Cache<any>();\n  }\n\n  runQuery(target: InstanaQuery, timeFilter: TimeFilter) {\n    if (\n      isInvalidQueryInterval(timeFilter.windowSize, hoursToMs(this.instanaOptions.queryinterval_limit_website_metrics))\n    ) {\n      throw new Error(\n        'Limit for maximum selectable windowsize exceeded, max is: ' +\n          this.instanaOptions.queryinterval_limit_website_metrics +\n          ' hours'\n      );\n    }\n\n    // avoid invalid calls\n    if (\n      !target ||\n      !target.metric ||\n      !target.metric.key ||\n      !target.group ||\n      !target.group.key ||\n      !target.entity ||\n      !target.entity.key\n    ) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    return this.fetchAnalyzeMetricsForWebsite(target, timeFilter).then((response: any) => {\n      return readItemMetrics(target, response, this.buildAnalyzeWebsiteLabel);\n    });\n  }\n\n  getWebsites(timeFilter: TimeFilter) {\n    const key = getTimeKey(timeFilter);\n\n    let websites = this.websitesCache.get(key);\n    if (websites) {\n      return websites;\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n    const data: BeaconGroupBody = {\n      group: {\n        groupbyTag: 'beacon.website.name',\n      },\n      timeFrame: {\n        to: timeFilter.to,\n        windowSize: windowSize,\n      },\n      type: 'PAGELOAD',\n      metrics: [\n        {\n          metric: 'pageLoads',\n          aggregation: 'SUM',\n        },\n      ],\n      order: {\n        by: 'pageLoads',\n        direction: 'desc',\n      },\n      pagination: {\n        ingestionTime: 0,\n        offset: 0,\n        retrievalSize: 200,\n      },\n    };\n    websites = postRequest(this.instanaOptions, '/api/website-monitoring/analyze/beacon-groups', data).then(\n      (websitesResponse: any) =>\n        websitesResponse.data.items.map((entry: any) => ({\n          key: entry.name,\n          label: entry.name,\n        }))\n    );\n    this.websitesCache.put(key, websites);\n\n    return websites;\n  }\n\n  getWebsiteTags() {\n    let websiteTags = this.miscCache.get('websiteTags');\n    if (websiteTags) {\n      return websiteTags;\n    }\n\n    websiteTags = getRequest(this.instanaOptions, '/api/website-monitoring/catalog/tags').then((tagsResponse: any) =>\n      tagsResponse.data.map((entry: any) => ({\n        key: entry.name,\n        label: entry.name,\n        type: entry.type,\n      }))\n    );\n    this.miscCache.put('websiteTags', websiteTags);\n\n    return websiteTags;\n  }\n\n  getWebsiteMetricsCatalog() {\n    let websiteCatalog = this.miscCache.get('websiteCatalog');\n    if (websiteCatalog) {\n      return websiteCatalog;\n    }\n\n    websiteCatalog = getRequest(this.instanaOptions, '/api/website-monitoring/catalog/metrics').then(\n      (catalogResponse: any) =>\n        catalogResponse.data.map((entry: any) => ({\n          key: entry.metricId,\n          label: entry.label,\n          aggregations: entry.aggregations ? this.transformAggregations(entry.aggregations.sort()) : [],\n          beaconTypes: entry.beaconTypes\n            ? entry.beaconTypes\n            : ['pageLoad', 'resourceLoad', 'httpRequest', 'error', 'custom', 'pageChange'],\n        }))\n    );\n    this.miscCache.put('websiteCatalog', websiteCatalog);\n\n    return websiteCatalog;\n  }\n\n  transformAggregations(aggregations: string[]) {\n    return _.map(aggregations, (a) => {\n      return {\n        key: a,\n        label: a,\n      };\n    });\n  }\n\n  private fetchAnalyzeMetricsForWebsite(target: InstanaQuery, timeFilter: TimeFilter) {\n    const windowSize = getWindowSize(timeFilter);\n    const tagFilters = [\n      {\n        name: 'beacon.website.name',\n        operator: 'EQUALS',\n        value: target.entity.key,\n      },\n    ];\n\n    _.forEach(target.filters, (filter) => {\n      if (filter.isValid) {\n        tagFilters.push(createTagFilter(filter));\n      }\n    });\n    const metric: any = {\n      metric: target.metric.key,\n      aggregation: target.aggregation.key ? target.aggregation.key : 'SUM',\n    };\n\n    if (!target.timeInterval) {\n      target.timeInterval = getDefaultChartGranularity(windowSize);\n    }\n    metric['granularity'] = target.timeInterval.key;\n\n    const group: any = {\n      groupbyTag: target.group.key,\n    };\n    if (target.group.type === 'KEY_VALUE_PAIR' && target.groupbyTagSecondLevelKey) {\n      group['groupbyTagSecondLevelKey'] = target.groupbyTagSecondLevelKey;\n    }\n\n    const data: BeaconGroupBody = {\n      group: group,\n      timeFrame: {\n        to: timeFilter.to,\n        windowSize: windowSize,\n      },\n      tagFilters: tagFilters,\n      type: target.entityType.key,\n      metrics: [metric],\n    };\n    return postRequest(this.instanaOptions, '/api/website-monitoring/analyze/beacon-groups?fillTimeSeries=true', data);\n  }\n\n  buildAnalyzeWebsiteLabel(target: InstanaQuery, item: any, key: string, index: number): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', item.name);\n      label = _.replace(label, '$website', target.entity.label!);\n      label = _.replace(label, '$type', target.entityType.label!);\n      label = _.replace(label, '$metric', target.metric.label!);\n      label = _.replace(label, '$key', key);\n      label = _.replace(label, '$index', '' + index + 1);\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n    return target.timeShift && target.timeShiftIsValid\n      ? item.name + ' (' + target.entity.label + ')' + ' - ' + key + ' - ' + target.timeShift\n      : item.name + ' (' + target.entity.label + ')' + ' - ' + key;\n  }\n}\n","export default [\n  { key: 'calls', label: 'Call count', description: 'calls', aggregations: [{ key: 'SUM', label: 'SUM' }] },\n  {\n    key: 'latency',\n    label: 'Call latency',\n    description: 'latency',\n    aggregations: [\n      { key: 'MAX', label: 'MAX' },\n      { key: 'MEAN', label: 'MEAN' },\n      { key: 'MIN', label: 'MIN' },\n      { key: 'P25', label: 'P25' },\n      { key: 'P50', label: 'P50' },\n      { key: 'P75', label: 'P75' },\n      { key: 'P90', label: 'P90' },\n      { key: 'P95', label: 'P95' },\n      { key: 'P98', label: 'P98' },\n      { key: 'P99', label: 'P99' },\n    ],\n  },\n  { key: 'errors', label: 'Error rate', description: 'errors', aggregations: [{ key: 'MEAN', label: 'MEAN' }] },\n  {\n    key: 'services',\n    label: 'Service Count',\n    description: 'services',\n    aggregations: [{ key: 'DISTINCT_COUNT', label: 'DISTINCT_COUNT' }],\n  },\n];\n","import { SelectableValue } from '@grafana/data';\nimport { InstanaOptions } from '../types/instana_options';\nimport Cache from '../cache';\nimport _ from 'lodash';\nimport TimeFilter from '../types/time_filter';\nimport { getTimeKey, getWindowSize, hoursToMs } from '../util/time_util';\nimport { getRequest, postRequest } from '../util/request_handler';\nimport { getDefaultChartGranularity } from '../util/rollup_granularity_util';\nimport { InstanaQuery } from '../types/instana_query';\nimport { createTagFilter, readItemMetrics } from '../util/analyze_util';\nimport { emptyResultData } from '../util/target_util';\nimport { ALL_APPLICATIONS, PAGINATION_LIMIT } from '../GlobalVariables';\nimport defaultApplicationMetricCatalog from '../lists/default_metric_catalog';\nimport { isInvalidQueryInterval } from '../util/queryInterval_check';\n\nexport class DataSourceApplication {\n  instanaOptions: InstanaOptions;\n  applicationsCache: Cache<Promise<SelectableValue[]>>;\n  miscCache: Cache<any>;\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.applicationsCache = new Cache<Promise<SelectableValue[]>>();\n    this.miscCache = new Cache<any>();\n  }\n\n  runQuery(target: InstanaQuery, timeFilter: TimeFilter): any {\n    // do not try to execute to big queries\n    if (isInvalidQueryInterval(timeFilter.windowSize, hoursToMs(this.instanaOptions.queryinterval_limit_app_calls))) {\n      throw new Error(\n        'Limit for maximum selectable windowsize exceeded, max is: ' +\n          this.instanaOptions.queryinterval_limit_app_calls +\n          ' hours'\n      );\n    }\n\n    // avoid invalid calls\n    if (\n      !target ||\n      !target.metric ||\n      !target.metric.key ||\n      !target.group ||\n      !target.group.key ||\n      !target.entity ||\n      (!target.entity.key && !target.entity.label)\n    ) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    return this.fetchAnalyzeMetricsForApplication(target, timeFilter).then((response) => {\n      target.showWarningCantShowAllResults = response.data.canLoadMore;\n      return readItemMetrics(target, response, this.buildAnalyzeApplicationLabel);\n    });\n  }\n\n  getApplications(timeFilter: TimeFilter) {\n    const key = getTimeKey(timeFilter);\n\n    let applications = this.applicationsCache.get(key);\n    if (applications) {\n      return applications;\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n    let page = 1;\n    let pageSize = 200;\n\n    applications = this.paginateApplications([], windowSize, timeFilter.to, page, pageSize, PAGINATION_LIMIT).then(\n      (response: any) => {\n        let allResults = _.flattenDeep(\n          _.map(response, (pageSet) => {\n            return pageSet.items;\n          })\n        );\n\n        return _.orderBy(\n          _.compact(allResults).map((entry) => {\n            return {\n              key: entry.id,\n              label: entry.label,\n            };\n          }),\n          [(application) => application.label.toLowerCase()],\n          ['asc']\n        );\n      }\n    );\n\n    this.applicationsCache.put(key, applications, 600000);\n    return applications;\n  }\n\n  paginateApplications(\n    results: any,\n    windowSize: number,\n    to: number,\n    page: number,\n    pageSize: number,\n    pageLimit: number\n  ) {\n    if (page > pageLimit) {\n      return results;\n    }\n\n    let queryParameters = 'windowSize=' + windowSize + '&to=' + to + '&page=' + page + '&pageSize=' + pageSize;\n\n    return getRequest(this.instanaOptions, '/api/application-monitoring/applications?' + queryParameters).then(\n      (response: any) => {\n        results.push(response.data);\n        if (page * pageSize < response.data.totalHits) {\n          page++;\n          return this.paginateApplications(results, windowSize, to, page, pageSize, pageLimit);\n        } else {\n          return results;\n        }\n      }\n    );\n  }\n\n  getApplicationTags() {\n    let applicationTags = this.miscCache.get('applicationTags');\n    if (applicationTags) {\n      return applicationTags;\n    }\n\n    applicationTags = getRequest(this.instanaOptions, '/api/application-monitoring/catalog/tags').then(\n      (tagsResponse: any) =>\n        tagsResponse.data.map((entry: any) => ({\n          key: entry.name,\n          label: entry.name,\n          type: entry.type,\n          canApplyToSource: entry.canApplyToSource,\n          canApplyToDestination: entry.canApplyToDestination,\n        }))\n    );\n    this.miscCache.put('applicationTags', applicationTags);\n\n    return applicationTags;\n  }\n\n  getApplicationMetricsCatalog() {\n    return defaultApplicationMetricCatalog;\n  }\n\n  fetchAnalyzeMetricsForApplication(target: InstanaQuery, timeFilter: TimeFilter) {\n    const windowSize = getWindowSize(timeFilter);\n    const tagFilters: any[] = [];\n\n    return Promise.resolve(this.getApplicationTags()).then((applicationTags) => {\n      if (target.entity.key) {\n        tagFilters.push({\n          name: 'application.name',\n          operator: 'EQUALS',\n          value: target.entity.label!,\n          entity:\n            target.applicationCallToEntity && target.applicationCallToEntity.key\n              ? target.applicationCallToEntity.key\n              : 'DESTINATION',\n        });\n      }\n\n      _.forEach(target.filters, (filter) => {\n        if (filter.isValid) {\n          let tagFilter: any = createTagFilter(filter);\n          const tag = _.find(applicationTags, ['key', filter.tag.key]);\n          if (tag.canApplyToDestination || tag.canApplyToSource) {\n            tagFilter['entity'] = this.getTagEntity(filter.entity, tag);\n          }\n          tagFilters.push(tagFilter);\n        }\n      });\n\n      const metric: any = {\n        metric: target.metric.key,\n        aggregation: target.aggregation && target.aggregation.key ? target.aggregation.key : 'SUM',\n      };\n\n      if (!target.timeInterval) {\n        target.timeInterval = getDefaultChartGranularity(windowSize);\n      }\n      metric['granularity'] = target.timeInterval.key;\n\n      const group: any = {\n        groupbyTag: target.group.key,\n      };\n      const tag: any = _.find(applicationTags, ['key', target.group.key]);\n      if (tag.canApplyToDestination || tag.canApplyToSource) {\n        group['groupbyTagEntity'] = this.getTagEntity(target.group, tag);\n      }\n      if (target.group.type === 'KEY_VALUE_PAIR' && target.groupbyTagSecondLevelKey) {\n        group['groupbyTagSecondLevelKey'] = target.groupbyTagSecondLevelKey;\n      }\n\n      const data: any = {\n        group: group,\n        timeFrame: {\n          to: timeFilter.to,\n          windowSize: windowSize,\n        },\n        tagFilters: tagFilters,\n        metrics: [metric],\n      };\n      return postRequest(\n        this.instanaOptions,\n        '/api/application-monitoring/analyze/call-groups?fillTimeSeries=true',\n        data\n      );\n    });\n  }\n\n  getTagEntity(selectedEntity: any, tag: any): string {\n    if (selectedEntity && selectedEntity.key === 'DESTINATION' && tag.canApplyToDestination) {\n      return 'DESTINATION';\n    }\n    if (selectedEntity && selectedEntity.key === 'SOURCE' && tag.canApplyToSource) {\n      return 'SOURCE';\n    }\n    return tag.canApplyToDestination ? 'DESTINATION' : 'SOURCE';\n  }\n\n  fetchApplicationMetrics(target: InstanaQuery, timeFilter: TimeFilter) {\n    // avoid invalid calls\n    if (!target || !target.metric || !target.metric.key) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n    const metric: any = {\n      metric: target.metric.key,\n      aggregation: target.aggregation && target.aggregation.key ? target.aggregation.key : 'SUM',\n    };\n\n    if (!target.timeInterval) {\n      target.timeInterval = getDefaultChartGranularity(windowSize);\n    }\n    metric['granularity'] = target.timeInterval.key;\n\n    const data: any = {\n      timeFrame: {\n        to: timeFilter.to,\n        windowSize: windowSize,\n      },\n      metrics: [metric],\n    };\n\n    if (target.entity.key !== null) {\n      data['applicationId'] = target.entity.key;\n    }\n\n    return postRequest(\n      this.instanaOptions,\n      '/api/application-monitoring/metrics/applications?fillTimeSeries=true',\n      data\n    );\n  }\n\n  buildAnalyzeApplicationLabel(target: InstanaQuery, item: any, key: string, index: number): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', item.name);\n      label = _.replace(label, '$application', target.entity.label!);\n      label = _.replace(label, '$metric', target.metric.label!);\n      label = _.replace(label, '$key', key);\n      label = _.replace(label, '$index', '' + index + 1);\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n\n    if (target.entity.label === ALL_APPLICATIONS) {\n      return target.timeShift ? item.name + ' - ' + key + ' - ' + target.timeShift : item.name + ' - ' + key;\n    }\n\n    return target.timeShift && target.timeShiftIsValid\n      ? item.name + ' (' + target.entity.label + ')' + ' - ' + key + ' - ' + target.timeShift\n      : item.name + ' (' + target.entity.label + ')' + ' - ' + key;\n  }\n\n  buildApplicationMetricLabel(target: InstanaQuery, item: any, key: string, index: number): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', item.application.label);\n      label = _.replace(label, '$application', target.entity.label!);\n      label = _.replace(label, '$metric', target.metric.label!);\n      label = _.replace(label, '$key', key);\n      label = _.replace(label, '$index', '' + index + 1);\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n\n    if (target.entity.label === ALL_APPLICATIONS) {\n      return target.timeShift\n        ? item.application.label + ' - ' + key + ' - ' + target.timeShift\n        : item.application.label + ' - ' + key;\n    }\n\n    return target.timeShift && target.timeShiftIsValid\n      ? item.application.label + ' (' + target.entity.label + ')' + ' - ' + key + ' - ' + target.timeShift\n      : item.application.label + ' (' + target.entity.label + ')' + ' - ' + key;\n  }\n}\n","import { SelectableValue } from '@grafana/data';\nimport { InstanaOptions } from '../types/instana_options';\nimport Cache from '../cache';\nimport _ from 'lodash';\nimport TimeFilter from '../types/time_filter';\nimport { getTimeKey, getWindowSize } from '../util/time_util';\nimport { getRequest, postRequest } from '../util/request_handler';\nimport { getDefaultChartGranularity } from '../util/rollup_granularity_util';\nimport { InstanaQuery } from '../types/instana_query';\nimport { PAGINATION_LIMIT } from '../GlobalVariables';\nimport { emptyResultData } from '../util/target_util';\n\nexport class DataSourceService {\n  instanaOptions: InstanaOptions;\n  servicesCache: Cache<Promise<SelectableValue[]>>;\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.servicesCache = new Cache<Promise<SelectableValue[]>>();\n  }\n\n  getServicesOfApplication(target: InstanaQuery, timeFilter: TimeFilter) {\n    let applicationId = '';\n    if (target.entity && target.entity.key) {\n      applicationId = target.entity.key;\n    }\n\n    const key = getTimeKey(timeFilter) + applicationId;\n    let services = this.servicesCache.get(key);\n    if (services) {\n      return services;\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n    let page = 1;\n    let pageSize = 200;\n\n    services = this.paginateServices(\n      [],\n      applicationId,\n      windowSize,\n      timeFilter.to,\n      page,\n      pageSize,\n      PAGINATION_LIMIT\n    ).then((response: any) => {\n      let allResults = _.flattenDeep(\n        _.map(response, (pageSet) => {\n          return pageSet.items;\n        })\n      );\n\n      return _.orderBy(\n        _.compact(allResults).map((entry) => {\n          return {\n            key: entry.id,\n            label: entry.label,\n          };\n        }),\n        [(service) => service.label.toLowerCase()],\n        ['asc']\n      );\n    });\n\n    this.servicesCache.put(key, services, 600000);\n    return services;\n  }\n\n  paginateServices(\n    results: any,\n    applicationId: string,\n    windowSize: number,\n    to: number,\n    page: number,\n    pageSize: number,\n    pageLimit: number\n  ) {\n    if (page > pageLimit) {\n      return results;\n    }\n\n    let queryParameters = 'windowSize=' + windowSize + '&to=' + to + '&page=' + page + '&pageSize=' + pageSize;\n\n    let url =\n      '/api/application-monitoring/applications;id=' +\n      (applicationId ? applicationId : '') +\n      '/services?' +\n      queryParameters;\n\n    return getRequest(this.instanaOptions, url).then((response: any) => {\n      results.push(response.data);\n      if (page * pageSize < response.data.totalHits) {\n        page++;\n        return this.paginateServices(results, applicationId, windowSize, to, page, pageSize, pageLimit);\n      } else {\n        return results;\n      }\n    });\n  }\n\n  fetchServiceMetrics(target: InstanaQuery, timeFilter: TimeFilter) {\n    // avoid invalid calls\n    if (!target || !target.metric || !target.metric.key) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n\n    if (!target.timeInterval) {\n      target.timeInterval = getDefaultChartGranularity(windowSize);\n    }\n\n    const metric = {\n      metric: target.metric.key,\n      aggregation: target.aggregation && target.aggregation.key ? target.aggregation.key : 'SUM',\n      granularity: target.timeInterval.key,\n    };\n\n    const data: any = {\n      timeFrame: {\n        to: timeFilter.to,\n        windowSize: windowSize,\n      },\n      metrics: [metric],\n    };\n\n    if (target.entity && target.entity.key) {\n      //see migration.ts why \"NO_SERVICE_FILTER\"\n      data['applicationId'] = target.entity.key;\n    }\n\n    if (target.service && target.service.key) {\n      data['serviceId'] = target.service.key;\n    }\n\n    return postRequest(this.instanaOptions, '/api/application-monitoring/metrics/services?fillTimeSeries=true', data);\n  }\n\n  buildServiceMetricLabel(target: InstanaQuery, item: any, key: string, index: number): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', item.service.label);\n      label = _.replace(label, '$service', target.service.label!);\n      label = _.replace(label, '$application', target.entity.label!);\n      label = _.replace(label, '$metric', target.metric.label!);\n      label = _.replace(label, '$key', key);\n      label = _.replace(label, '$index', index + 1 + '');\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n\n    if (target.service.key === null) {\n      return target.timeShift\n        ? item.service.label + ' - ' + key + ' - ' + target.timeShift\n        : item.service.label + ' - ' + key;\n    }\n\n    return target.timeShift && target.timeShiftIsValid\n      ? item.service.label + ' (' + target.service.label + ')' + ' - ' + key + ' - ' + target.timeShift\n      : item.service.label + ' (' + target.service.label + ')' + ' - ' + key;\n  }\n}\n","import { SelectableValue } from '@grafana/data';\nimport { InstanaOptions } from '../types/instana_options';\nimport Cache from '../cache';\nimport _ from 'lodash';\nimport TimeFilter from '../types/time_filter';\nimport { getTimeKey, getWindowSize } from '../util/time_util';\nimport { getRequest, postRequest } from '../util/request_handler';\nimport { InstanaQuery } from '../types/instana_query';\nimport { ALL_ENDPOINTS, PAGINATION_LIMIT } from '../GlobalVariables';\nimport { emptyResultData } from '../util/target_util';\nimport { getDefaultChartGranularity } from '../util/rollup_granularity_util';\n\nexport class DataSourceEndpoint {\n  instanaOptions: InstanaOptions;\n  endpointsCache: Cache<Promise<SelectableValue[]>>;\n\n  constructor(options: InstanaOptions) {\n    this.instanaOptions = options;\n    this.endpointsCache = new Cache<Promise<SelectableValue[]>>();\n  }\n\n  getEndpointsOfService(target: InstanaQuery, timeFilter: TimeFilter) {\n    let applicationId = '';\n    if (target.entity && target.entity.key) {\n      applicationId = target.entity.key;\n    }\n\n    let serviceId = '';\n    if (target.service) {\n      serviceId = target.service.key;\n    }\n\n    const key = getTimeKey(timeFilter) + applicationId + serviceId;\n    let endpoints = this.endpointsCache.get(key);\n    if (endpoints) {\n      return endpoints;\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n    let page = 1;\n    let pageSize = 200;\n\n    endpoints = this.paginateEndpoints(\n      [],\n      applicationId,\n      serviceId,\n      windowSize,\n      timeFilter.to,\n      page,\n      pageSize,\n      PAGINATION_LIMIT\n    ).then((response: any) => {\n      let allResults = _.flattenDeep(\n        _.map(response, (pageSet, index) => {\n          return pageSet.items;\n        })\n      );\n\n      return _.orderBy(\n        _.compact(allResults).map((entry) => {\n          return {\n            key: entry.id,\n            label: entry.label,\n          };\n        }),\n        [(endpoint) => endpoint.label.toLowerCase()],\n        ['asc']\n      );\n    });\n\n    this.endpointsCache.put(key, endpoints, 600000);\n    return endpoints;\n  }\n\n  paginateEndpoints(\n    results: any,\n    applicationId: string,\n    serviceId: string,\n    windowSize: number,\n    to: number,\n    page: number,\n    pageSize: number,\n    pageLimit: number\n  ) {\n    if (page > pageLimit) {\n      return results;\n    }\n\n    var queryParameters = 'windowSize=' + windowSize + '&to=' + to + '&page=' + page + '&pageSize=' + pageSize;\n\n    var url =\n      '/api/application-monitoring/applications;id=' +\n      (applicationId ? applicationId : '') +\n      '/services;id=' +\n      (serviceId ? serviceId : '') +\n      '/endpoints?' +\n      queryParameters;\n\n    return getRequest(this.instanaOptions, url).then((response: any) => {\n      results.push(response.data);\n      if (page * pageSize < response.data.totalHits) {\n        page++;\n        return this.paginateEndpoints(results, applicationId, serviceId, windowSize, to, page, pageSize, pageLimit);\n      } else {\n        return results;\n      }\n    });\n  }\n\n  fetchEndpointMetrics(target: InstanaQuery, timeFilter: TimeFilter) {\n    // avoid invalid calls\n    if (!target || !target.metric || !target.metric.key) {\n      return Promise.resolve(emptyResultData(target.refId));\n    }\n\n    const windowSize = getWindowSize(timeFilter);\n    const metric: any = {\n      metric: target.metric.key,\n      aggregation: target.aggregation && target.aggregation.key ? target.aggregation.key : 'SUM',\n    };\n\n    if (!target.timeInterval) {\n      target.timeInterval = getDefaultChartGranularity(windowSize);\n    }\n    metric['granularity'] = target.timeInterval.key;\n\n    const data: any = {\n      endpointId: target.endpoint.key,\n      timeFrame: {\n        to: timeFilter.to,\n        windowSize: windowSize,\n      },\n      metrics: [metric],\n    };\n\n    if (target.entity && target.entity.key) {\n      //see migration.ts why \"ALL_SERVICES\"\n      data['applicationId'] = target.entity.key;\n    }\n\n    if (target.service && target.service.key) {\n      data['serviceId'] = target.service.key;\n    }\n\n    return postRequest(this.instanaOptions, '/api/application-monitoring/metrics/endpoints?fillTimeSeries=true', data);\n  }\n\n  buildEndpointMetricLabel(target: InstanaQuery, item: any, key: string, index: number): string {\n    if (target.labelFormat) {\n      let label = target.labelFormat;\n      label = _.replace(label, '$label', item.endpoint.label);\n      label = _.replace(label, '$endpoint', target.endpoint.label!);\n      label = _.replace(label, '$service', target.service.label!);\n      label = _.replace(label, '$application', target.entity.label!);\n      label = _.replace(label, '$metric', target.metric.label!);\n      label = _.replace(label, '$key', key);\n      label = _.replace(label, '$index', '' + index + 1);\n      label = _.replace(label, '$timeShift', target.timeShift);\n      return label;\n    }\n\n    if (target.endpoint.label === ALL_ENDPOINTS) {\n      return target.timeShift\n        ? item.endpoint.label + ' - ' + key + ' - ' + target.timeShift\n        : item.endpoint.label + ' - ' + key;\n    }\n\n    return target.timeShift && target.timeShiftIsValid\n      ? item.endpoint.label + ' (' + target.endpoint.label + ')' + ' - ' + key + ' - ' + target.timeShift\n      : item.endpoint.label + ' (' + target.endpoint.label + ')' + ' - ' + key;\n  }\n}\n","// can be removed once mixpanel shows no old plugins around\nimport _ from 'lodash';\nimport metric_categories from './lists/metric_categories';\n\nexport default function (target: any) {\n  // 1.3.1 towards 2.0.0\n  if (target.entityType && typeof target.entityType === 'string') {\n    target.entityType = { key: target.entityType, label: target.entityType };\n  }\n\n  // 2.3.1 towards 2.4.0\n  if (target.filter && target.filter !== '') {\n    if (!target.customFilters) {\n      target.customFilters = [];\n      target.customFilters.push({ value: target.filter });\n    }\n  }\n\n  // 2.4.2 towards 2.4.3\n  if (target.timeInterval) {\n    if (target.timeInterval.value) {\n      target.timeInterval = { key: target.timeInterval.value, label: target.timeInterval.label };\n    } else if (target.timeInterval.rollup) {\n      target.timeInterval = { key: target.timeInterval.rollup, label: target.timeInterval.label };\n    }\n  }\n\n  //2.4.4 towards 2.5.0\n  if (target.metricCategory === '5') {\n    //old service metric view\n    target.metricCategory = '4';\n    target.service = {}; //because target.service does not exist yet.\n    target.service.key = target.entity.key;\n    target.service.label = target.entity.label;\n    if (target.selectedApplication && target.selectedApplication.key) {\n      target.entity.key = target.selectedApplication.key;\n      target.entity.label = target.selectedApplication.label;\n    } else {\n      target.entity.key = null;\n      target.entity.label = 'Test';\n    }\n  }\n\n  //2.4.4 towards 2.5.0\n  if (target.metricCategory === '6') {\n    //old endpoint metric view\n    target.metricCategory = '4';\n    target.endpoint = {}; //because target.endpoint does not exist yet.\n    target.endpoint.key = target.entity.key;\n    if (target.selectedApplication && target.selectedApplication.key) {\n      target.entity.key = target.selectedApplication.key;\n      target.entity.label = target.selectedApplication.label;\n    } else {\n      target.entity.key = null;\n      target.entity.label = 'Test';\n    }\n  }\n\n  //2.7.3 towards 3.0 (Angular to React Migration)\n  if (target.aggregation && typeof target.aggregation === 'string') {\n    target.aggregation\n      ? (target.aggregation = { key: target.aggregation, label: target.aggregation })\n      : (target.aggregation = {});\n    target.aggregationFunction\n      ? (target.aggregationFunction = {\n          key: target.aggregationFunction.label,\n          label: target.aggregationFunction.label,\n        })\n      : (target.aggregationFunction = {});\n  }\n  if (target.customFilters && target.customFilters.length > 0 && target.customFilters[0].value) {\n    target.customFilters = _.map(target.customFilters, (cf) => cf.value);\n  }\n  if (target.filters && target.filters.length > 0 && !target.filters[0].tag.key && !target.filters[0].tag.label) {\n    _.forEach(target.filters, (filter) => {\n      filter.tag.label = filter.tag.key;\n    });\n    console.log('filters', target.filters);\n  }\n  if (target.group && target.group.key && !target.group.label) {\n    target.group.label = target.group.key;\n  }\n  if (target.metricCategory && typeof target.metricCategory === 'string') {\n    target.metricCategory = _.find(\n      metric_categories,\n      (category) => category.key === parseInt(target.metricCategory, 10)\n    );\n  }\n}\n","import {\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceApi,\n  DataSourceInstanceSettings,\n  SelectableValue,\n} from '@grafana/data';\nimport { InstanaQuery } from '../types/instana_query';\nimport { InstanaOptions } from '../types/instana_options';\nimport { getRequest, instanaUrl } from '../util/request_handler';\nimport { DataSourceSlo } from './DataSource_Slo';\nimport MetricCategories from '../lists/metric_categories';\nimport TimeFilter from '../types/time_filter';\nimport { hoursToMs, readTime } from '../util/time_util';\nimport Cache from '../cache';\nimport { emptyResultData } from '../util/target_util';\nimport _ from 'lodash';\nimport { DataSourceInfrastructure } from './Datasource_Infrastructure';\nimport {\n  getDefaultChartGranularity,\n  getDefaultMetricRollupDuration,\n  getPossibleGranularities,\n  getPossibleRollups,\n} from '../util/rollup_granularity_util';\nimport { appendData, generateStableHash, hasIntersection } from '../util/delta_util';\nimport {\n  ANALYZE_APPLICATION_METRICS,\n  ANALYZE_WEBSITE_METRICS,\n  APPLICATION_SERVICE_ENDPOINT_METRICS,\n  BUILT_IN_METRICS,\n  CUSTOM_METRICS,\n  SLO_INFORMATION,\n} from '../GlobalVariables';\nimport getVersion from '../util/instana_version';\nimport { aggregateTarget } from '../util/aggregation_util';\nimport { DataSourceWebsite } from './DataSource_Website';\nimport { DataSourceApplication } from './DataSource_Application';\nimport { DataSourceService } from './DataSource_Service';\nimport { DataSourceEndpoint } from './DataSource_Endpoint';\nimport { isInvalidQueryInterval } from '../util/queryInterval_check';\nimport { readItemMetrics } from '../util/analyze_util';\nimport migrate from '../migration';\n\nexport class DataSource extends DataSourceApi<InstanaQuery, InstanaOptions> {\n  options: InstanaOptions;\n  dataSourceInfrastructure: DataSourceInfrastructure;\n  dataSourceWebsite: DataSourceWebsite;\n  dataSourceApplication: DataSourceApplication;\n  dataSourceService: DataSourceService;\n  dataSourceEndpoint: DataSourceEndpoint;\n  dataSourceSlo: DataSourceSlo;\n  timeFilter!: TimeFilter;\n  availableGranularities: SelectableValue[];\n  availableRollups: SelectableValue[];\n  availableTimeIntervals: SelectableValue[];\n  resultCache: Cache<any>;\n\n  constructor(instanceSettings: DataSourceInstanceSettings<InstanaOptions>) {\n    super(instanceSettings);\n    this.options = instanceSettings.jsonData;\n    this.options.url = instanaUrl(instanceSettings);\n    this.availableGranularities = [];\n    this.availableRollups = [];\n    this.availableTimeIntervals = [];\n    this.dataSourceSlo = new DataSourceSlo(instanceSettings.jsonData);\n    this.dataSourceInfrastructure = new DataSourceInfrastructure(instanceSettings.jsonData);\n    this.dataSourceWebsite = new DataSourceWebsite(instanceSettings.jsonData);\n    this.dataSourceApplication = new DataSourceApplication(instanceSettings.jsonData);\n    this.dataSourceService = new DataSourceService(instanceSettings.jsonData);\n    this.dataSourceEndpoint = new DataSourceEndpoint(instanceSettings.jsonData);\n    this.resultCache = new Cache<any>();\n  }\n\n  async query(options: DataQueryRequest<InstanaQuery>): Promise<DataQueryResponse> {\n    const { range } = options;\n    this.timeFilter = readTime(range!);\n    this.availableRollups = getPossibleRollups(this.timeFilter);\n    this.availableGranularities = getPossibleGranularities(this.timeFilter.windowSize);\n\n    return Promise.all(\n      options.targets.map((target) => {\n        let targetTimeFilter = readTime(range!);\n\n        // grafana setting to disable query execution\n        if (target.hide) {\n          return { data: [], target: target };\n        }\n\n        migrate(target);\n\n        if (!target.metricCategory) {\n          target.metricCategory = MetricCategories[0];\n        }\n\n        this.setPossibleTimeIntervals(target);\n\n        // target migration for downwards compatibility\n        migrate(target);\n\n        if (target.timeShift) {\n          let millis = this.convertTimeShiftToMillis(target.timeShift);\n          if (millis) {\n            targetTimeFilter = this.applyTimeShiftOnTimeFilter(targetTimeFilter, millis);\n          }\n        }\n\n        target.timeFilter = targetTimeFilter;\n        target.stableHash = generateStableHash(target);\n        targetTimeFilter = this.adjustTimeFilterIfCached(targetTimeFilter, target);\n\n        if (target.metricCategory.key === SLO_INFORMATION) {\n          return this.dataSourceSlo.runQuery(target, targetTimeFilter).then((data: any) => {\n            return this.buildTargetWithAppendedDataResult(target, targetTimeFilter, data);\n          });\n        } else if (target.metricCategory.key === BUILT_IN_METRICS || target.metricCategory.key === CUSTOM_METRICS) {\n          return this.dataSourceInfrastructure.runQuery(target, targetTimeFilter).then((data: any) => {\n            return this.buildTargetWithAppendedDataResult(target, targetTimeFilter, data);\n          });\n        } else if (target.metricCategory.key === ANALYZE_WEBSITE_METRICS) {\n          return this.dataSourceWebsite.runQuery(target, targetTimeFilter).then((data: any) => {\n            return this.buildTargetWithAppendedDataResult(target, targetTimeFilter, data);\n          });\n        } else if (target.metricCategory.key === ANALYZE_APPLICATION_METRICS) {\n          return this.dataSourceApplication.runQuery(target, targetTimeFilter).then((data: any) => {\n            return this.buildTargetWithAppendedDataResult(target, targetTimeFilter, data);\n          });\n        } else if (target.metricCategory.key === APPLICATION_SERVICE_ENDPOINT_METRICS) {\n          return this.getApplicationServiceEndpointMetrics(target, targetTimeFilter).then((data: any) => {\n            return this.buildTargetWithAppendedDataResult(target, targetTimeFilter, data);\n          });\n        }\n\n        return Promise.resolve(emptyResultData(target.refId));\n      })\n    ).then((targetData) => {\n      let result: any = [];\n      _.each(targetData, (targetAndData) => {\n        // Flatten the list as Grafana expects a list of targets with corresponding datapoints.\n        let resultData = _.compact(_.flatten(targetAndData.data)); // Also remove empty data items\n        this.applyTimeShiftIfNecessary(resultData, targetAndData.target);\n        resultData = this.aggregateDataIfNecessary(resultData, targetAndData.target);\n        this.cacheResultIfNecessary(resultData, targetAndData.target);\n        result.push(resultData);\n      });\n\n      return { data: _.flatten(result) };\n    });\n  }\n\n  getApplicationServiceEndpointMetrics(target: InstanaQuery, timeFilter: TimeFilter) {\n    // do not try to execute too big queries\n    if (isInvalidQueryInterval(timeFilter.windowSize, hoursToMs(this.options.queryinterval_limit_app_metrics))) {\n      throw new Error(\n        'Limit for maximum selectable windowsize exceeded, max is: ' +\n          this.options.queryinterval_limit_app_metrics +\n          ' hours'\n      );\n    }\n\n    if (target.endpoint && target.endpoint.key) {\n      return this.dataSourceEndpoint.fetchEndpointMetrics(target, timeFilter).then((response: any) => {\n        return readItemMetrics(target, response, this.dataSourceEndpoint.buildEndpointMetricLabel);\n      });\n    } else if (target.service && target.service.key) {\n      return this.dataSourceService.fetchServiceMetrics(target, timeFilter).then((response: any) => {\n        return readItemMetrics(target, response, this.dataSourceService.buildServiceMetricLabel);\n      });\n    } else if (target.entity && target.entity.key) {\n      return this.dataSourceApplication.fetchApplicationMetrics(target, timeFilter).then((response: any) => {\n        if (response.data) {\n          target.showWarningCantShowAllResults = response.data.canLoadMore;\n        }\n        return readItemMetrics(target, response, this.dataSourceApplication.buildApplicationMetricLabel);\n      });\n    }\n\n    return Promise.resolve({ data: { items: [] } });\n  }\n\n  applyTimeShiftIfNecessary(data: any, target: InstanaQuery) {\n    data.forEach((data: any) => {\n      if (target.timeShift) {\n        this.applyTimeShiftOnData(data, this.convertTimeShiftToMillis(target.timeShift));\n      }\n    });\n  }\n\n  cacheResultIfNecessary(result: any, target: InstanaQuery) {\n    if (this.supportsDeltaRequests(target) && this.hasResult(result)) {\n      let cachedObj = {\n        timeFilter: target.timeFilter,\n        results: result,\n      };\n      this.resultCache.put(target.stableHash, cachedObj, 400000); // to cover at least 5 min refreshs\n    }\n  }\n\n  supportsDeltaRequests(target: InstanaQuery): boolean {\n    if (target.metricCategory && target.metricCategory.key === SLO_INFORMATION) {\n      return false;\n    }\n\n    let version = this.resultCache.get('version');\n    if (!version) {\n      return getVersion(this.options).then((version: any) => {\n        this.resultCache.put('version', version, 3600000); // one hour\n        return version >= 171;\n      });\n    }\n\n    return version >= 171;\n  }\n\n  hasResult(result: any) {\n    return result && result.length > 0;\n  }\n\n  applyTimeShiftOnData(data: any, timeshift: any) {\n    data.datapoints.forEach((datapoint: any) => {\n      datapoint[1] = datapoint[1] + timeshift;\n    });\n  }\n\n  aggregateDataIfNecessary(data: any, target: InstanaQuery) {\n    let newData = [];\n\n    if (target.aggregateGraphs) {\n      const aggregatedData = aggregateTarget(data, target);\n      newData.push(aggregatedData);\n      if (!target.hideOriginalGraphs) {\n        _.each(data, (dt) => {\n          if (dt.target !== aggregatedData.target) {\n            newData.push(dt);\n          }\n        });\n      }\n      return newData;\n    }\n\n    return data;\n  }\n\n  buildTargetWithAppendedDataResult(target: InstanaQuery, timeFilter: TimeFilter, data: any) {\n    if (timeFilter.from !== target.timeFilter.from && data) {\n      data = this.appendResult(data, target);\n    }\n\n    return {\n      target: target,\n      data: data,\n    };\n  }\n\n  appendResult(data: any, target: InstanaQuery) {\n    let cachedResult = this.resultCache.get(target.stableHash);\n    if (cachedResult && cachedResult.results) {\n      data = appendData(data, cachedResult.results);\n    }\n    return data;\n  }\n\n  adjustTimeFilterIfCached(timeFilter: TimeFilter, target: InstanaQuery): TimeFilter {\n    let cachedResult = this.resultCache.get(target.stableHash);\n    if (cachedResult && hasIntersection(timeFilter, cachedResult.timeFilter)) {\n      let newFrom = this.getDeltaRequestTimestamp(cachedResult.results, cachedResult.timeFilter.from);\n      let newTo = Math.floor(timeFilter.to / 10000) * 10000;\n      return {\n        from: newFrom,\n        to: newTo,\n        windowSize: newTo - newFrom,\n      };\n    }\n    return timeFilter;\n  }\n\n  getDeltaRequestTimestamp(series: any, fromDefault: number): number {\n    const length = series[0].datapoints.length;\n    if (length === 0) {\n      return fromDefault;\n    }\n    const penultimate = length > 1 ? length - 2 : 1;\n    return series[0].datapoints[penultimate][1];\n  }\n\n  getSloReports(): Promise<SelectableValue[]> {\n    return this.dataSourceSlo.getConfiguredSLIs();\n  }\n\n  getEntityTypes(): Promise<SelectableValue[]> {\n    return this.dataSourceInfrastructure.getEntityTypes();\n  }\n\n  fetchApplications() {\n    return this.dataSourceApplication.getApplications(this.getTimeFilter());\n  }\n\n  fetchServices(target: InstanaQuery) {\n    return this.dataSourceService.getServicesOfApplication(target, this.getTimeFilter());\n  }\n\n  fetchEndpoints(target: InstanaQuery) {\n    return this.dataSourceEndpoint.getEndpointsOfService(target, this.getTimeFilter());\n  }\n\n  fetchTypesForTarget(query: InstanaQuery) {\n    return this.dataSourceInfrastructure.fetchTypesForTarget(query, this.getTimeFilter());\n  }\n\n  fetchWebsites(): Promise<SelectableValue[]> {\n    return this.dataSourceWebsite.getWebsites(this.getTimeFilter());\n  }\n\n  getDefaultTimeInterval(query: InstanaQuery) {\n    if (query.metricCategory.key === BUILT_IN_METRICS || query.metricCategory.key === CUSTOM_METRICS) {\n      return getDefaultMetricRollupDuration(this.getTimeFilter());\n    } else {\n      return getDefaultChartGranularity(this.getTimeFilter().windowSize);\n    }\n  }\n\n  convertTimeShiftToMillis(timeShift: string) {\n    if (!timeShift) {\n      return null;\n    }\n\n    try {\n      return this.parseTimeShift(timeShift);\n    } catch (e) {\n      return null;\n    }\n  }\n\n  parseTimeShift(timeShift: string) {\n    let milliSeconds = 1000;\n\n    if (timeShift.endsWith('s')) {\n      return parseInt(timeShift.split('s')[0], 10) * milliSeconds;\n    } else if (timeShift.endsWith('m')) {\n      return parseInt(timeShift.split('m')[0], 10) * 60 * milliSeconds;\n    } else if (timeShift.endsWith('h')) {\n      return parseInt(timeShift.split('h')[0], 10) * 60 * 60 * milliSeconds;\n    } else if (timeShift.endsWith('d')) {\n      return parseInt(timeShift.split('d')[0], 10) * 60 * 60 * 24 * milliSeconds;\n    } else if (timeShift.endsWith('w')) {\n      return parseInt(timeShift.split('w')[0], 10) * 60 * 60 * 24 * 7 * milliSeconds;\n    }\n\n    return null;\n  }\n\n  applyTimeShiftOnTimeFilter(timeFilter: TimeFilter, timeShift: number): TimeFilter {\n    if (timeShift) {\n      return {\n        from: timeFilter.from - timeShift,\n        to: timeFilter.to - timeShift,\n        windowSize: timeFilter.windowSize,\n      };\n    } else {\n      return timeFilter;\n    }\n  }\n\n  setPossibleTimeIntervals(target: InstanaQuery) {\n    if (target.metricCategory.key === 0 || target.metricCategory.key === 1) {\n      this.availableTimeIntervals = this.availableRollups;\n    } else {\n      this.availableTimeIntervals = this.availableGranularities;\n    }\n  }\n\n  getTimeFilter(): TimeFilter {\n    if (!this.timeFilter || !this.timeFilter.from) {\n      const now = Math.floor(Date.now() / 1000) * 1000;\n      const windowSize = 6 * 60 * 60 * 1000; // 6h\n      this.timeFilter = {\n        from: now - windowSize,\n        to: now,\n        windowSize: windowSize,\n      };\n    }\n\n    return this.timeFilter;\n  }\n\n  testDatasource(): Promise<any> {\n    return getRequest(this.options, '/api/monitoringState').then(\n      () => {\n        return {\n          status: 'success',\n          message: 'Successfully connected to the Instana API.',\n          title: 'Success',\n        };\n      },\n      (error: any) => {\n        if (error.status === 401) {\n          return {\n            status: 'error',\n            message: 'Unauthorized. Please verify the API Token.',\n            title: 'Error',\n          };\n        } else {\n          console.log(error);\n          return {\n            status: 'error',\n            message: 'Error (' + error.status + ') connecting to the Instana API: ' + error.statusText,\n            title: 'Error',\n          };\n        }\n      }\n    );\n  }\n}\n","import _ from 'lodash';\n\n// check grafana version (5.3+)\nexport default () => {\n  const version = _.get(window, ['grafanaBootData', 'settings', 'buildInfo', 'version'], '3.0.0');\n  const versions = _.split(version, '.', 2).map((v) => {\n    return parseInt(v, 10);\n  });\n  return version[0] >= 6 || (versions[0] >= 5 && versions[1] >= 3);\n};\n","import React, { ChangeEvent, PureComponent } from 'react';\n\nimport { DataSourcePluginOptionsEditorProps, DataSourceSettings, SelectableValue } from '@grafana/data';\nimport { Legend, Field, Input, Checkbox, Icon, Tooltip } from '@grafana/ui';\nimport { InstanaOptions } from '../types/instana_options';\nimport getVersion from '../util/instana_version';\nimport proxyCheck from '../util/proxy_check';\nimport _ from 'lodash';\n\ninterface Props extends DataSourcePluginOptionsEditorProps<InstanaOptions> {}\n\ninterface State {\n  canQueryOfflineSnapshots: boolean;\n  canUseProxy: boolean;\n}\n\nexport class ConfigEditor extends PureComponent<Props, State> {\n  constructor(props: Readonly<Props>) {\n    super(props);\n    this.state = { canQueryOfflineSnapshots: false, canUseProxy: false };\n\n    // check possibility every time\n    this.detectFeatures();\n\n    const { options } = this.props;\n    const { jsonData } = options;\n\n    if (jsonData.useProxy === undefined) {\n      jsonData.useProxy = proxyCheck();\n    }\n  }\n\n  onInstanaOptionsChange = (eventItem: ChangeEvent<HTMLInputElement> | SelectableValue, key: keyof InstanaOptions) => {\n    const { options, onOptionsChange } = this.props;\n    const jsonData = {\n      ...options.jsonData,\n      [key]: eventItem.currentTarget.value,\n    };\n\n    onOptionsChange({ ...options, jsonData });\n\n    if ('url' === key || 'apiToken' === key) {\n      this.debouncedDetectFeatures(options);\n    }\n  };\n\n  onSwitchChange = (eventItem: SelectableValue<HTMLInputElement> | any, key: keyof InstanaOptions) => {\n    const { options, onOptionsChange } = this.props;\n    let value = false;\n\n    if (eventItem && eventItem.currentTarget) {\n      value = !options.jsonData[key];\n    }\n\n    const jsonData = {\n      ...options.jsonData,\n      [key]: value,\n    };\n\n    onOptionsChange({ ...options, jsonData });\n  };\n\n  debouncedDetectFeatures = (settings?: DataSourceSettings<InstanaOptions, {}>) => {\n    _.debounce(() => this.detectFeatures(settings), 500);\n  };\n\n  /**\n   * Checks whether the provided tenant-unit is able to provide certain features such as querying offline snapshots.\n   */\n  detectFeatures = (settings?: DataSourceSettings<InstanaOptions, {}>) => {\n    if (!settings) {\n      settings = this.props.options;\n    }\n\n    if (!settings.id) {\n      return;\n    }\n\n    this.setState({ canUseProxy: proxyCheck() });\n    getVersion(settings.jsonData).then((version: any) => {\n      version\n        ? this.setState({ canQueryOfflineSnapshots: version >= 156 })\n        : this.setState({ canQueryOfflineSnapshots: false });\n    });\n  };\n\n  render() {\n    const { options } = this.props;\n    const { jsonData } = options;\n\n    return (\n      <div>\n        <Legend>Instana configuration</Legend>\n\n        <Field\n          className={'width-30'}\n          horizontal\n          required\n          label=\"URL\"\n          description=\"The URL of your Instana installation.\"\n        >\n          <Input\n            css={''}\n            width={30}\n            value={jsonData.url}\n            placeholder={'https://tools-acme.instana.io'}\n            onChange={(event) => this.onInstanaOptionsChange(event, 'url')}\n          />\n        </Field>\n\n        <Field\n          className={'width-30'}\n          horizontal\n          required\n          label=\"API Token\"\n          description=\"The API token to access the data.\"\n        >\n          <Input\n            type=\"password\"\n            css={''}\n            width={30}\n            value={jsonData.apiToken}\n            suffix={\n              <Tooltip\n                content={\n                  <p>\n                    You can create API tokens following the instructions at\n                    <a href=\"https://docs.instana.io/quick_start/api/#api-tokens\">\n                      https://docs.instana.io/quick_start/api/#api-tokens\n                    </a>\n                  </p>\n                }\n                theme={'info'}\n              >\n                <Icon name=\"info-circle\" />\n              </Tooltip>\n            }\n            onChange={(event) => this.onInstanaOptionsChange(event, 'apiToken')}\n          />\n        </Field>\n\n        <Checkbox\n          css={''}\n          label={'Use Proxy'}\n          value={jsonData.useProxy}\n          onChange={(event) => this.onSwitchChange(event, 'useProxy')}\n          description={'Use Grafana server as proxy. Needs Grafana 5.3+ and Instana datasource 2.0.0+'}\n        />\n\n        <Checkbox\n          css={''}\n          label={'Enable offline snapshots'}\n          value={jsonData.showOffline}\n          onChange={(event) => this.onSwitchChange(event, 'showOffline')}\n          description={'Enables querying offline snapshots. Needs Instana release 156+ and Instana datasource 2.3.0+'}\n        />\n\n        <Checkbox\n          css={''}\n          label={'Enable SLO dashboards'}\n          value={jsonData.allowSlo}\n          onChange={(event) => this.onSwitchChange(event, 'allowSlo')}\n          description={\n            'Adds a new category that allows retrieval of SLO information. Needs Instana release 176+ and ' +\n            'a explicit feature flag.'\n          }\n        />\n\n        <br />\n        <br />\n        <b>Maximum query intervals in hours</b>\n        <p className={'width-30'}>\n          This settings are optional values to control the load of data queries, by defining the maximum allowed query\n          intervals against the Instana API.\n        </p>\n\n        <Field className={'width-30'} horizontal label=\"Infrastructure metrics\">\n          <Input\n            css={''}\n            width={30}\n            value={jsonData.queryinterval_limit_infra}\n            placeholder={'optional: interval limit in hours'}\n            onChange={(event) => this.onInstanaOptionsChange(event, 'queryinterval_limit_infra')}\n          />\n        </Field>\n\n        <Field className={'width-30'} horizontal label=\"Application metrics\">\n          <Input\n            css={''}\n            width={30}\n            value={jsonData.queryinterval_limit_app_metrics}\n            placeholder={'optional: interval limit in hours'}\n            onChange={(event) => this.onInstanaOptionsChange(event, 'queryinterval_limit_app_metrics')}\n          />\n        </Field>\n\n        <Field className={'width-30'} horizontal label=\"Analyze application calls\">\n          <Input\n            css={''}\n            width={30}\n            value={jsonData.queryinterval_limit_app_calls}\n            placeholder={'optional: interval limit in hours'}\n            onChange={(event) => this.onInstanaOptionsChange(event, 'queryinterval_limit_app_calls')}\n          />\n        </Field>\n\n        <Field className={'width-30'} horizontal label=\"Analyze website\">\n          <Input\n            css={''}\n            width={30}\n            value={jsonData.queryinterval_limit_website_metrics}\n            placeholder={'optional: interval limit in hours'}\n            onChange={(event) => this.onInstanaOptionsChange(event, 'queryinterval_limit_website_metrics')}\n          />\n        </Field>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\ninterface WrapperProps {\n  disabled?: boolean;\n  stretch?: boolean;\n  children: any;\n}\n\nexport default function FormWrapper(props: WrapperProps) {\n  const style: any = { display: 'flex' };\n\n  if (props.disabled) {\n    style.opacity = '0.4';\n    style.pointerEvents = 'none';\n  }\n\n  if (props.stretch) {\n    style.width = '100%';\n  }\n\n  return <div style={style}>{props.children}</div>;\n}\n","import React from 'react';\n\nimport { InlineFormLabel, Select, PopoverContent } from '@grafana/ui';\nimport FormWrapper from './FormWrapper';\nimport { SelectableValue } from '@grafana/data';\n\ninterface State {}\n\ninterface Props {\n  label: string;\n  value: SelectableValue;\n  options: any;\n  queryKeyword?: boolean;\n  disabled?: boolean;\n  defaultValue?: SelectableValue;\n  noOptionsMessage?: string;\n  searchable?: boolean | true;\n  labelWidth?: number | 14;\n  inputWidth?: number | 30;\n  placeholder?: string | '-';\n  tooltip?: PopoverContent;\n\n  onChange(event?: any): any;\n}\n\n/**\n * Default select field including label. Select element is grafana/ui <Select />.\n */\nexport default class FormSelect extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  render() {\n    const {\n      label,\n      tooltip,\n      searchable = true,\n      disabled,\n      queryKeyword,\n      placeholder = '-',\n      labelWidth = 14,\n      inputWidth = 30,\n      ...remainingProps\n    } = this.props;\n\n    return (\n      <FormWrapper disabled={disabled} stretch={!inputWidth}>\n        <InlineFormLabel className={queryKeyword ? 'query-keyword' : ''} width={labelWidth} tooltip={tooltip}>\n          {label}\n        </InlineFormLabel>\n        <Select\n          menuPlacement={'bottom'}\n          disabled={disabled}\n          width={inputWidth}\n          isSearchable={searchable}\n          placeholder={placeholder}\n          {...remainingProps}\n        />\n      </FormWrapper>\n    );\n  }\n}\n","import React, { ChangeEvent } from 'react';\n\nimport { ALL_APPLICATIONS, ALL_ENDPOINTS, ALL_SERVICES } from '../../GlobalVariables';\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport FormSelect from '../FormField/FormSelect';\nimport { SelectableValue } from '@grafana/data';\nimport { Input } from '@grafana/ui';\nimport _ from 'lodash';\n\ninterface ApplicationServiceEndpointMetricsState {\n  applications: SelectableValue[];\n  services: SelectableValue[];\n  endpoints: SelectableValue[];\n}\n\ninterface Props {\n  query: InstanaQuery;\n\n  onRunQuery(): void;\n\n  onChange(value: InstanaQuery): void;\n\n  updateMetrics(metrics: SelectableValue[]): void;\n\n  datasource: DataSource;\n}\n\nlet isUnmounting = false;\n\nexport class ApplicationServiceEndpointMetrics extends React.Component<Props, ApplicationServiceEndpointMetricsState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      applications: [],\n      services: [],\n      endpoints: [],\n    };\n  }\n\n  componentDidMount() {\n    isUnmounting = false;\n    this.loadApplications();\n    this.loadServices();\n    this.loadEndpoints();\n\n    const { datasource } = this.props;\n    this.props.updateMetrics(datasource.dataSourceApplication.getApplicationMetricsCatalog());\n  }\n\n  componentWillUnmount() {\n    isUnmounting = true;\n  }\n\n  loadApplications() {\n    const { query, onChange, datasource } = this.props;\n    datasource.fetchApplications().then((applications) => {\n      if (!isUnmounting) {\n        this.setState({\n          applications: applications,\n        });\n\n        if (!_.find(this.state.applications, { key: null })) {\n          let apps = this.state.applications;\n          apps.unshift({ key: null, label: ALL_APPLICATIONS });\n          this.setState({\n            applications: apps,\n          });\n        }\n\n        // replace removed application\n        if (\n          query.entity &&\n          query.entity.key &&\n          !_.find(this.state.applications, (app) => app.key === query.entity.key)\n        ) {\n          query.entity = this.state.applications[0];\n        } else if ((!query.entity || !query.entity.key) && applications) {\n          query.entity = this.state.applications[0];\n        }\n\n        onChange(query);\n      }\n    });\n  }\n\n  loadServices() {\n    const { query, onChange, datasource } = this.props;\n    datasource.fetchServices(query).then((services) => {\n      if (!isUnmounting) {\n        this.setState({\n          services: services,\n        });\n\n        if (!_.find(this.state.services, { key: null })) {\n          let s = this.state.services;\n          s.unshift({ key: null, label: ALL_SERVICES });\n          this.setState({\n            services: s,\n          });\n        }\n\n        if (query.service && query.service.key) {\n          if (!_.find(this.state.services, (app) => app.key === query.service.key)) {\n            query.service = this.state.services[0];\n          }\n        } else {\n          query.service = this.state.services[0];\n        }\n\n        onChange(query);\n      }\n    });\n  }\n\n  loadEndpoints() {\n    const { query, onChange, datasource } = this.props;\n    datasource.fetchEndpoints(query).then((endpoints) => {\n      if (!isUnmounting) {\n        this.setState({\n          endpoints: endpoints,\n        });\n\n        if (!_.find(this.state.endpoints, { key: null })) {\n          let e = this.state.endpoints;\n          e.unshift({ key: null, label: ALL_ENDPOINTS });\n          this.setState({\n            endpoints: e,\n          });\n        }\n\n        if (query.endpoint && query.endpoint.key) {\n          if (!_.find(this.state.endpoints, (app) => app.key === query.endpoint.key)) {\n            query.endpoint = { key: null, label: ALL_ENDPOINTS };\n          }\n        } else {\n          query.endpoint = { key: null, label: ALL_ENDPOINTS };\n        }\n\n        onChange(query);\n      }\n    });\n  }\n\n  onApplicationChange = (application: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.entity = application;\n    onChange(query);\n    this.loadServices();\n    this.loadEndpoints();\n    onRunQuery();\n  };\n\n  onServiceChange = (service: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.service = service;\n    onChange(query);\n    this.loadEndpoints();\n    onRunQuery();\n  };\n\n  onEndpointChange = (endpoint: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.endpoint = endpoint;\n    onChange(query);\n    onRunQuery();\n  };\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onGroupByTagSecondLevelKeyChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.groupbyTagSecondLevelKey = eventItem.currentTarget.value;\n    onChange(query);\n\n    // onRunQuery with 500ms delay after last debounce\n    this.debouncedRunQuery();\n  };\n\n  render() {\n    const { query } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormSelect\n          queryKeyword\n          inputWidth={0}\n          label={'Application'}\n          tooltip={'Select your application.'}\n          value={query.entity}\n          options={this.state.applications}\n          onChange={this.onApplicationChange}\n        />\n\n        <FormSelect\n          queryKeyword\n          labelWidth={6}\n          inputWidth={0}\n          label={'Service'}\n          tooltip={'Select your service.'}\n          value={query.service}\n          options={this.state.services}\n          onChange={this.onServiceChange}\n        />\n\n        <FormSelect\n          queryKeyword\n          labelWidth={6}\n          inputWidth={0}\n          label={'Endpoints'}\n          tooltip={'Select your endpoint.'}\n          value={query.endpoint}\n          options={this.state.endpoints}\n          onChange={this.onEndpointChange}\n        />\n\n        <div style={!query.showGroupBySecondLevel ? { display: 'none' } : {}}>\n          <Input css={''} value={query.groupbyTagSecondLevelKey} onChange={this.onGroupByTagSecondLevelKeyChange} />\n        </div>\n      </div>\n    );\n  }\n}\n","export default [\n  { key: 'DESTINATION', label: 'Dest' },\n  { key: 'SOURCE', label: 'Src' },\n];\n","import React, { ChangeEvent } from 'react';\n\nimport { ALL_APPLICATIONS, ANALYZE_APPLICATION_METRICS } from '../../GlobalVariables';\nimport call_to_entities from '../../lists/apply_call_to_entities';\nimport { Input, Select, InlineFormLabel } from '@grafana/ui';\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport FormWrapper from '../FormField/FormWrapper';\nimport { SelectableValue } from '@grafana/data';\nimport _ from 'lodash';\nimport '../plugin.css';\n\ninterface ApplicationCallsMetricsState {\n  applications: SelectableValue[];\n}\n\ninterface Props {\n  query: InstanaQuery;\n\n  groups: SelectableValue[];\n\n  updateGroups(groups: SelectableValue[]): void;\n\n  onRunQuery(): void;\n\n  onChange(value: InstanaQuery): void;\n\n  updateMetrics(metrics: SelectableValue[]): void;\n\n  datasource: DataSource;\n}\n\nlet isUnmounting = false;\n\nexport class ApplicationCallsMetrics extends React.Component<Props, ApplicationCallsMetricsState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      applications: [],\n    };\n  }\n\n  componentDidMount() {\n    const { query, datasource, onChange } = this.props;\n    isUnmounting = false;\n    datasource.fetchApplications().then((applications) => {\n      if (!isUnmounting) {\n        if (!_.find(applications, { key: null })) {\n          applications.unshift({ key: null, label: ALL_APPLICATIONS });\n        }\n\n        this.setState({\n          applications: applications,\n        });\n\n        if (!query.entity || (!query.entity.key && !query.entity.label)) {\n          query.entity = applications[0];\n        }\n\n        if (!query.callToEntity || !query.callToEntity.key) {\n          query.callToEntity = call_to_entities[0];\n        }\n        if (!query.applicationCallToEntity || !query.applicationCallToEntity.key) {\n          query.applicationCallToEntity = call_to_entities[0];\n        }\n\n        onChange(query);\n      }\n    });\n\n    datasource.dataSourceApplication.getApplicationTags().then((applicationTags: any) => {\n      if (!isUnmounting) {\n        this.props.updateGroups(_.sortBy(applicationTags, 'key'));\n\n        // select a meaningful default group\n        if (!query.group || !query.group.key) {\n          query.group = _.find(applicationTags, ['key', 'endpoint.name']);\n          onChange(query);\n        }\n      }\n    });\n\n    this.props.updateMetrics(datasource.dataSourceApplication.getApplicationMetricsCatalog());\n  }\n\n  componentWillUnmount() {\n    isUnmounting = true;\n  }\n\n  onApplicationChange = (application: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.entity = application;\n    onChange(query);\n    onRunQuery();\n  };\n\n  onGroupChange = (group: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.group = group;\n\n    if (query.group && query.metricCategory.key === ANALYZE_APPLICATION_METRICS) {\n      query.showGroupBySecondLevel = query.group.type === 'KEY_VALUE_PAIR';\n    }\n\n    if (!query.showGroupBySecondLevel) {\n      query.groupbyTagSecondLevelKey = '';\n    }\n\n    onChange(query);\n    onRunQuery();\n  };\n\n  onApplicationCallToEntityChange = (applicationCallToEntity: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.applicationCallToEntity = applicationCallToEntity;\n    onChange(query);\n    onRunQuery();\n  };\n\n  onCallToEntityChange = (callToEntity: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.callToEntity = callToEntity;\n    onChange(query);\n    onRunQuery();\n  };\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onGroupByTagSecondLevelKeyChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.groupbyTagSecondLevelKey = eventItem.currentTarget.value;\n    onChange(query);\n\n    // onRunQuery with 500ms delay after last debounce\n    this.debouncedRunQuery();\n  };\n\n  render() {\n    const { query, groups } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormWrapper stretch={true}>\n          <InlineFormLabel className={'query-keyword'} width={14} tooltip={'Select your application.'}>\n            Application\n          </InlineFormLabel>\n          <Select\n            menuPlacement={'bottom'}\n            width={12}\n            className={'entityDropdown'}\n            isSearchable={true}\n            options={call_to_entities}\n            value={query.applicationCallToEntity}\n            onChange={this.onApplicationCallToEntityChange}\n          />\n          <Select\n            menuPlacement={'bottom'}\n            width={0}\n            isSearchable={true}\n            value={query.entity}\n            options={this.state.applications}\n            onChange={this.onApplicationChange}\n          />\n        </FormWrapper>\n\n        <FormWrapper stretch={true}>\n          <InlineFormLabel className={'query-keyword'} width={7} tooltip={'Group by tag.'}>\n            Group by\n          </InlineFormLabel>\n          <Select\n            menuPlacement={'bottom'}\n            width={12}\n            className={'entityDropdown'}\n            isSearchable={true}\n            value={query.callToEntity}\n            options={call_to_entities}\n            onChange={this.onCallToEntityChange}\n          />\n          <Select\n            menuPlacement={'bottom'}\n            width={0}\n            isSearchable={true}\n            options={groups}\n            value={query.group}\n            onChange={this.onGroupChange}\n          />\n        </FormWrapper>\n\n        <div style={!query.showGroupBySecondLevel ? { display: 'none' } : {}}>\n          <Input\n            css={''}\n            type={'text'}\n            value={query.groupbyTagSecondLevelKey}\n            onChange={this.onGroupByTagSecondLevelKeyChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport { InlineFormLabel, Input, PopoverContent } from '@grafana/ui';\nimport FormWrapper from './FormWrapper';\n\ninterface State {}\n\ninterface Props {\n  label: string;\n  value: string;\n  invalid?: boolean;\n  disabled?: boolean;\n  placeholder?: string;\n  queryKeyword?: boolean;\n  labelWidth?: number | 14;\n  inputWidth?: number | 30;\n  tooltip?: PopoverContent;\n\n  onChange(event?: any): any;\n}\n\n/**\n * Default input field including label. Input element is grafana/ui <Input />.\n */\nexport default class FormInput extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  render() {\n    const { label, tooltip, queryKeyword, disabled, labelWidth = 14, inputWidth = 30, ...remainingProps } = this.props;\n\n    return (\n      <FormWrapper disabled={disabled} stretch={!inputWidth}>\n        <InlineFormLabel className={queryKeyword ? 'query-keyword' : ''} width={labelWidth} tooltip={tooltip}>\n          {label}\n        </InlineFormLabel>\n        <Input css={''} width={inputWidth} disabled={disabled} {...remainingProps} />\n      </FormWrapper>\n    );\n  }\n}\n","import React, { ChangeEvent } from 'react';\n\nimport { PLEASE_SPECIFY } from '../../../GlobalVariables';\nimport { DataSource } from '../../../datasources/DataSource';\nimport { InstanaQuery } from '../../../types/instana_query';\nimport { Button, InlineFormLabel } from '@grafana/ui';\nimport FormInput from '../../FormField/FormInput';\nimport { SelectableValue } from '@grafana/data';\n\ninterface MetricFilterState {\n  customFilters: string[];\n}\n\ninterface Props {\n  query: InstanaQuery;\n  datasource: DataSource;\n  availableMetrics: SelectableValue[];\n  onFilterChange(customFilters: string[]): void;\n  onRunQuery(): void;\n  onChange(value: InstanaQuery): void;\n}\n\nexport class MetricFilter extends React.Component<Props, MetricFilterState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      customFilters: [],\n    };\n  }\n\n  componentDidMount() {\n    const { query } = this.props;\n    this.setState({ customFilters: query.customFilters });\n  }\n\n  onFilterChange = (eventItem: ChangeEvent<HTMLInputElement>, index: number) => {\n    const customFilters: string[] = this.state.customFilters;\n    customFilters[index] = eventItem.currentTarget.value;\n    this.setState({ customFilters: customFilters });\n\n    this.props.onFilterChange(customFilters);\n  };\n\n  addCustomFilter = () => {\n    let customFilters = this.state.customFilters;\n    customFilters.push('');\n    this.setState({ customFilters: customFilters });\n\n    const { query, onChange } = this.props;\n    query.customFilters = customFilters;\n    onChange(query);\n  };\n\n  removeCustomFilter = (index: number) => {\n    let customFilters: string[] = this.state.customFilters;\n    customFilters.splice(index, 1);\n    this.setState({ customFilters: customFilters });\n\n    this.props.onFilterChange(customFilters);\n  };\n\n  render() {\n    let filter = null;\n    let listFilter = this.state.customFilters.map((filters, index) => {\n      filter = (\n        <div className={'gf-form'}>\n          <FormInput\n            label={index + 1 + '. filter metric select'}\n            value={this.state.customFilters[index]}\n            placeholder={PLEASE_SPECIFY}\n            onChange={(event) => this.onFilterChange(event, index)}\n            tooltip={'Type to suggest metrics.'}\n          />\n          <Button variant={'secondary'} onClick={() => this.removeCustomFilter(index)}>\n            -\n          </Button>\n        </div>\n      );\n      return filter;\n    });\n\n    return (\n      <div>\n        {listFilter}\n\n        <div className={'gf-form'}>\n          <InlineFormLabel width={14} tooltip={'Add an additional metric select filter.'}>\n            Add filter metric select\n          </InlineFormLabel>\n          <Button variant={'secondary'} onClick={this.addCustomFilter}>\n            +\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport { InlineFormLabel, LegacyForms, PopoverContent } from '@grafana/ui';\nimport FormWrapper from './FormWrapper';\n\nconst { Switch } = LegacyForms;\n\ninterface State {}\n\ninterface Props {\n  label: string;\n  value: boolean;\n  disabled?: boolean;\n  queryKeyword?: boolean;\n  labelWidth?: number | 14;\n  tooltip?: PopoverContent;\n\n  onChange(event?: any): any;\n}\n\n/**\n * Default switch field including label. Switch element is grafana/ui <Switch />.\n */\nexport default class FormSwitch extends React.Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  render() {\n    const { label, tooltip, queryKeyword, disabled, labelWidth = 14, value, ...remainingProps } = this.props;\n\n    return (\n      <FormWrapper disabled={disabled} stretch={false}>\n        <InlineFormLabel className={queryKeyword ? 'query-keyword' : ''} width={labelWidth} tooltip={tooltip}>\n          {label}\n        </InlineFormLabel>\n        <Switch checked={value} label={''} {...remainingProps} />\n      </FormWrapper>\n    );\n  }\n}\n","import React, { ChangeEvent } from 'react';\n\nimport { InstanaQuery } from '../../../types/instana_query';\nimport FormSwitch from '../../FormField/FormSwitch';\nimport { Input } from '@grafana/ui';\nimport _ from 'lodash';\n\ninterface FreeTextMetricsState {}\n\ninterface Props {\n  query: InstanaQuery;\n  onRunQuery(): void;\n  onChange(value: InstanaQuery): void;\n  loadEntityTypes(filterResult?: boolean): void;\n}\n\nexport class FreeTextMetrics extends React.Component<Props, FreeTextMetricsState> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onUseFreeTextMetricsChange = (event: React.SyntheticEvent<HTMLInputElement> | undefined) => {\n    const { query, onChange, loadEntityTypes } = this.props;\n    if (event && event.currentTarget) {\n      query.useFreeTextMetrics = event.currentTarget.checked;\n      if (query.useFreeTextMetrics) {\n        loadEntityTypes(false);\n        query.metric = {};\n      } else {\n        loadEntityTypes(true);\n      }\n      onChange(query);\n    }\n  };\n\n  onFreeTextMetricsChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.freeTextMetrics = eventItem.currentTarget.value;\n    onChange(query);\n\n    // onRunQuery with 500ms delay after last debounce\n    this.debouncedRunQuery();\n  };\n\n  render() {\n    const { query } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormSwitch\n          queryKeyword\n          label={'Enable free text metrics'}\n          tooltip={\n            'Specify comma separated metrics directly in this text field. Once this field has a value,' +\n            ' selected metrics from above will be ignored. Enabled as soon as a query is entered.' +\n            ' Max 4 metrics supported.'\n          }\n          value={query.useFreeTextMetrics}\n          onChange={this.onUseFreeTextMetricsChange}\n          disabled={false}\n        />\n        <Input\n          css={''}\n          width={0}\n          disabled={!query.useFreeTextMetrics}\n          value={query.freeTextMetrics}\n          placeholder={'metric.one,metric.two,metric.three'}\n          onChange={this.onFreeTextMetricsChange}\n        />\n      </div>\n    );\n  }\n}\n","export default [\n  {\n    label: 'SUM',\n  },\n  {\n    label: 'MEAN',\n  },\n  {\n    label: 'MIN',\n  },\n  {\n    label: 'MAX',\n  },\n];\n","import React from 'react';\n\nimport AggregationFunctions from '../../lists/aggregation_function';\nimport { InstanaQuery } from '../../types/instana_query';\nimport FormSwitch from '../FormField/FormSwitch';\nimport { SelectableValue } from '@grafana/data';\nimport { Select } from '@grafana/ui';\n\ninterface AggregateQueryState {}\n\ninterface Props {\n  query: InstanaQuery;\n  onRunQuery(): void;\n  onChange(value: InstanaQuery): void;\n}\n\nexport class AggregateQuery extends React.Component<Props, AggregateQueryState> {\n  constructor(props: any) {\n    super(props);\n    this.state = { showAdditionalSettings: false, legendFormat: '' };\n    const { query } = this.props;\n    if (!query.aggregationFunction) {\n      query.aggregationFunction = AggregationFunctions[0];\n    }\n  }\n\n  onAggregateGraphs = (event: React.SyntheticEvent<HTMLInputElement> | undefined) => {\n    const { query, onRunQuery } = this.props;\n    if (event && event.currentTarget) {\n      query.aggregateGraphs = event.currentTarget.checked;\n      onRunQuery();\n    }\n  };\n\n  onHideOriginalGraph = (event: React.SyntheticEvent<HTMLInputElement> | undefined) => {\n    const { query, onRunQuery } = this.props;\n    if (event && event.currentTarget) {\n      query.hideOriginalGraphs = event.currentTarget.checked;\n      onRunQuery();\n    }\n  };\n\n  onAggregationFunctionChange = (event: SelectableValue) => {\n    const { query, onRunQuery } = this.props;\n    query.aggregationFunction = event;\n    onRunQuery();\n  };\n\n  render() {\n    const { query } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormSwitch\n          queryKeyword\n          label={'Aggregate query graphs'}\n          tooltip={'Aggregate all graphs of a query.'}\n          value={query.aggregateGraphs}\n          onChange={this.onAggregateGraphs}\n        />\n\n        <Select\n          menuPlacement={'bottom'}\n          width={12}\n          isSearchable={true}\n          options={AggregationFunctions}\n          value={query.aggregationFunction}\n          disabled={!query.aggregateGraphs}\n          onChange={this.onAggregationFunctionChange}\n        />\n\n        <FormSwitch\n          queryKeyword\n          disabled={!query.aggregateGraphs}\n          labelWidth={10}\n          label={'Hide original graphs'}\n          tooltip={'Removes the original graphs resulted from the query and only shows the aggregated graph.'}\n          value={query.hideOriginalGraphs}\n          onChange={this.onHideOriginalGraph}\n        />\n      </div>\n    );\n  }\n}\n","import React, { ChangeEvent, FormEvent } from 'react';\n\nimport { BUILT_IN_METRICS, CUSTOM_METRICS, SLO_INFORMATION } from '../../GlobalVariables';\nimport { FreeTextMetrics } from '../Infrastructure/Custom/FreeTextMetrics';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { AggregateQuery } from './AggregateQuery';\nimport FormSwitch from '../FormField/FormSwitch';\nimport FormInput from '../FormField/FormInput';\nimport _ from 'lodash';\n\nconst legendFormatPlaceholders = [\n  '$label (on host $host)',\n  '$label (on host $host)',\n  '$label ($application) - $key',\n  '$label ($website) - $key',\n  '$label ($application) - $key',\n  '',\n  '',\n  '',\n];\n\nconst legendFormatTooltips = [\n  <div>\n    Default: $label (on host $host)\n    <ul>\n      <li>• $label - entity label</li>\n      <li>• $host - corresponding host</li>\n      <li>• $pid - corresponding PID</li>\n      <li>• $timeShift - corresponding timeShift</li>\n      <li>• $metric - displayed metric</li>\n      <li>• $type - entity type</li>\n      <li>• $service - service label</li>\n      <li>• $name - label alternative</li>\n      <li>• $index - index in the list</li>\n    </ul>\n  </div>,\n  <div>\n    Default: $label (on host $host)\n    <ul>\n      <li>• $label - entity label</li>\n      <li>• $host - corresponding host</li>\n      <li>• $pid - corresponding PID</li>\n      <li>• $timeShift - corresponding timeShift</li>\n      <li>• $metric - displayed metric</li>\n      <li>• $type - entity type</li>\n      <li>• $service - service label</li>\n      <li>• $name - label alternative</li>\n      <li>• $index - index in the list</li>\n    </ul>\n  </div>,\n  <div>\n    Default: $label ($application) - $key\n    <ul>\n      <li>• $label - entity label</li>\n      <li>• $application - application label</li>\n      <li>• $timeShift - corresponding timeShift</li>\n      <li>• $metric - displayed metric</li>\n      <li>• $key - metric key with aggregation and rollup</li>\n      <li>• $index - index in the list</li>\n    </ul>\n  </div>,\n  <div>\n    Default: $label ($website) - $key\n    <ul>\n      <li>• $label - entity label</li>\n      <li>• $website - application label</li>\n      <li>• $type - entity type</li>\n      <li>• $timeShift - corresponding timeShift</li>\n      <li>• $metric - displayed metric</li>\n      <li>• $key - metric key with aggregation and rollup</li>\n      <li>• $index - index in the list</li>\n    </ul>\n  </div>,\n  <div>\n    Default: $label ($application) - $key\n    <ul>\n      <li>• $label - entity label</li>\n      <li>• $application - application label</li>\n      <li>• $service - service label</li>\n      <li>• $endpoint - endpoint label</li>\n      <li>• $timeShift - corresponding timeShift</li>\n      <li>• $metric - displayed metric</li>\n      <li>• $key - metric key with aggregation and rollup</li>\n      <li>• $index - index in the list</li>\n    </ul>\n  </div>,\n  '',\n  '',\n  '',\n];\n\ninterface AdvancedSettingsState {\n  showAdditionalSettings: boolean;\n  legendFormatPlaceholder: string;\n}\n\ninterface Props {\n  query: InstanaQuery;\n  onRunQuery(): void;\n  onChange(value: InstanaQuery): void;\n  loadEntityTypes(filterResult?: boolean): void;\n}\n\nexport default class AdvancedSettings extends React.Component<Props, AdvancedSettingsState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      showAdditionalSettings: false,\n      legendFormatPlaceholder: this.setLegendFormatPlaceholder(),\n    };\n  }\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onLegendFormatChange = (eventItem: FormEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.labelFormat = eventItem.currentTarget.value;\n    onChange(query);\n\n    // onRunQuery with 500ms delay after last debounce\n    this.debouncedRunQuery();\n  };\n\n  onTimeShiftChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.timeShift = eventItem.currentTarget.value;\n\n    if (query.timeShift) {\n      query.timeShiftIsValid = query.timeShift.match(/\\d+[m,s,h,d,w]{1}/) ? true : false;\n    } else {\n      query.timeShiftIsValid = true;\n    }\n\n    onChange(query);\n\n    if (query.timeShiftIsValid) {\n      // onRunQuery with 500ms delay after last debounce\n      this.debouncedRunQuery();\n    }\n  };\n\n  setLegendFormatPlaceholder(): string {\n    const { query } = this.props;\n    return legendFormatPlaceholders[query.metricCategory.key];\n  }\n\n  setLegendFormatTooltip() {\n    const { query } = this.props;\n    return legendFormatTooltips[query.metricCategory.key];\n  }\n\n  render() {\n    const { query, onRunQuery, onChange, loadEntityTypes } = this.props;\n\n    return (\n      <div>\n        <div className={'gf-form'}>\n          <FormSwitch\n            label={'Show advanced settings'}\n            tooltip={'Show all additional settings'}\n            value={this.state.showAdditionalSettings}\n            onChange={() => this.setState({ showAdditionalSettings: !this.state.showAdditionalSettings })}\n          />\n        </div>\n\n        <div hidden={!this.state.showAdditionalSettings}>\n          <div className={'gf-form'} hidden={query.metricCategory.key === SLO_INFORMATION}>\n            <FormInput\n              queryKeyword\n              inputWidth={0}\n              label={'Legend format'}\n              tooltip={this.setLegendFormatTooltip()}\n              value={query.labelFormat}\n              placeholder={this.setLegendFormatPlaceholder()}\n              onChange={(event) => this.onLegendFormatChange(event)}\n            />\n          </div>\n\n          <div className={'gf-form'}>\n            <FormInput\n              queryKeyword\n              inputWidth={0}\n              label={'Time shift'}\n              tooltip={\n                'Specify the amount of hours that shall be used. The time shift function always go back in time, ' +\n                'not forward. Accepts values such as 1s, 1m, 1h, 1d, 1w.'\n              }\n              value={query.timeShift}\n              invalid={!query.timeShiftIsValid}\n              placeholder={'1h'}\n              onChange={(event) => this.onTimeShiftChange(event)}\n            />\n          </div>\n\n          <div hidden={query.metricCategory.key !== CUSTOM_METRICS}>\n            <FreeTextMetrics\n              query={query}\n              onRunQuery={onRunQuery}\n              onChange={onChange}\n              loadEntityTypes={loadEntityTypes}\n            />\n          </div>\n\n          <div hidden={query.metricCategory.key !== BUILT_IN_METRICS && query.metricCategory.key !== CUSTOM_METRICS}>\n            <AggregateQuery query={query} onRunQuery={onRunQuery} onChange={onChange} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { ChangeEvent } from 'react';\n\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { PLEASE_SPECIFY } from '../../GlobalVariables';\nimport FormSelect from '../FormField/FormSelect';\nimport { SelectableValue } from '@grafana/data';\nimport FormInput from '../FormField/FormInput';\nimport _ from 'lodash';\n\ninterface QueryTypeState {}\n\ninterface Props {\n  query: InstanaQuery;\n  datasource: DataSource;\n  queryTypes: SelectableValue[];\n  onRunQuery(): void;\n  loadEntityTypes(filterResult?: boolean): void;\n  onChange(value: InstanaQuery): void;\n  updateMetrics(metrics: SelectableValue[]): void;\n  updateQueryTypes(types: SelectableValue[]): void;\n}\n\nexport class QueryType extends React.Component<Props, QueryTypeState> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const { query, loadEntityTypes } = this.props;\n    if (query.entityQuery) {\n      loadEntityTypes();\n    }\n  }\n\n  onQueryChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange, updateQueryTypes } = this.props;\n    if (eventItem.currentTarget && eventItem.currentTarget.value) {\n      query.entityQuery = eventItem.currentTarget.value;\n    } else {\n      updateQueryTypes([]);\n      query.entityQuery = '';\n      query.entityType = { key: null, label: '-' };\n    }\n\n    onChange(query);\n\n    // loadEntityTypes with 500ms delay after last debounce\n    this.debouncedEntityTypes();\n  };\n\n  onTypeChange = (eventItem: SelectableValue) => {\n    const { query, datasource, onChange } = this.props;\n    query.entityType = eventItem;\n    onChange(query);\n\n    datasource.dataSourceInfrastructure\n      .getMetricsCatalog(query.entityType, query.metricCategory.key)\n      .then((results) => {\n        this.props.updateMetrics(results);\n      });\n  };\n\n  debouncedEntityTypes = _.debounce(this.props.loadEntityTypes, 500);\n\n  render() {\n    const { query, queryTypes } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormInput\n          queryKeyword\n          inputWidth={0}\n          label={'Query'}\n          tooltip={\n            <div>\n              Specify a query for the entities you wish to plot. Use the dynamic focus syntax:\n              <a href=\"https://docs.instana.io/core_concepts/dynamic_focus/#syntax\">\n                https://docs.instana.io/core_concepts/dynamic_focus/#syntax\n              </a>\n            </div>\n          }\n          value={query.entityQuery}\n          placeholder={PLEASE_SPECIFY}\n          onChange={this.onQueryChange}\n        />\n\n        <FormSelect\n          queryKeyword\n          labelWidth={6}\n          label={'Type'}\n          tooltip={'Select an entity type for a list of available metrics.'}\n          noOptionsMessage={'No types found with query'}\n          value={query.entityType}\n          options={queryTypes}\n          onChange={this.onTypeChange}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { SelectableValue } from '@grafana/data';\nimport { QueryType } from './QueryType';\n\ninterface InfrastructureBuiltInState {}\n\ninterface Props {\n  query: InstanaQuery;\n  datasource: DataSource;\n  queryTypes: SelectableValue[];\n  onRunQuery(): void;\n  loadEntityTypes(filterResult?: boolean): void;\n  onChange(value: InstanaQuery): void;\n  updateMetrics(metrics: SelectableValue[]): void;\n  updateQueryTypes(types: SelectableValue[]): void;\n}\n\nlet isUnmounting = false;\n\nexport class Infrastructure extends React.Component<Props, InfrastructureBuiltInState> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const { query, onChange, datasource } = this.props;\n    isUnmounting = false;\n\n    if (query.entityQuery && query.entityType && query.entityType.key) {\n      datasource.dataSourceInfrastructure\n        .getMetricsCatalog(query.entityType, query.metricCategory.key)\n        .then((results) => {\n          if (!isUnmounting) {\n            this.props.updateMetrics(results);\n          }\n        });\n    } else {\n      query.metric = {\n        key: null,\n        label: '-',\n      };\n    }\n\n    onChange(query);\n  }\n\n  componentWillUnmount() {\n    isUnmounting = true;\n  }\n\n  render() {\n    const {\n      query,\n      onRunQuery,\n      onChange,\n      updateMetrics,\n      loadEntityTypes,\n      datasource,\n      queryTypes,\n      updateQueryTypes,\n    } = this.props;\n\n    return (\n      <QueryType\n        query={query}\n        onChange={onChange}\n        queryTypes={queryTypes}\n        onRunQuery={onRunQuery}\n        datasource={datasource}\n        updateMetrics={updateMetrics}\n        loadEntityTypes={loadEntityTypes}\n        updateQueryTypes={updateQueryTypes}\n      />\n    );\n  }\n}\n","export default [\n  {\n    key: 'SLI',\n    label: 'SLI',\n  },\n  {\n    key: 'Remaining Error Budget',\n    label: 'Remaining Error Budget',\n  },\n  {\n    key: 'Timeseries',\n    label: 'Timeseries',\n  },\n];\n","import React, { ChangeEvent } from 'react';\n\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { SLO_INFORMATION } from '../../GlobalVariables';\nimport SloSpecifics from '../../lists/slo_specifics';\nimport FormSelect from '../FormField/FormSelect';\nimport { SelectableValue } from '@grafana/data';\nimport FormInput from '../FormField/FormInput';\nimport _ from 'lodash';\n\nconst MAX_VAL = 0.9999;\n\ninterface SloInformationState {\n  sloReports: SelectableValue[];\n  isValidSlo: boolean;\n}\n\ninterface Props {\n  query: InstanaQuery;\n\n  onRunQuery(): void;\n\n  onChange(value: InstanaQuery): void;\n\n  datasource: DataSource;\n}\n\nlet isUnmounting = false;\n\nexport class SloInformation extends React.Component<Props, SloInformationState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      sloReports: [],\n      isValidSlo: true,\n    };\n  }\n\n  componentDidMount() {\n    isUnmounting = false;\n    this.loadSloReports();\n    this.isValid(this.props.query.sloValue);\n  }\n\n  componentWillUnmount() {\n    isUnmounting = true;\n  }\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onSloChange = (slo: SelectableValue) => {\n    const { query, onRunQuery } = this.props;\n    query.sloReport = slo;\n    onRunQuery();\n  };\n\n  onSloValueChange = (sloValue: ChangeEvent<HTMLInputElement>) => {\n    const { query } = this.props;\n    query.sloValue = sloValue.currentTarget.value;\n\n    if (this.isValid(query.sloValue)) {\n      // onRunQuery with 500ms delay after last debounce\n      this.debouncedRunQuery();\n    }\n  };\n\n  onSloSpecificChange = (sloSpecific: SelectableValue) => {\n    const { query, onRunQuery } = this.props;\n    query.sloSpecific = sloSpecific;\n    onRunQuery();\n  };\n\n  isValid(val: string): boolean {\n    const valid = !val || (+val >= 0 && +val <= MAX_VAL);\n    this.setState({\n      isValidSlo: valid,\n    });\n    return valid;\n  }\n\n  shouldComponentUpdate(\n    nextProps: Readonly<Props>,\n    nextState: Readonly<SloInformationState>,\n    nextContext: any\n  ): boolean {\n    return nextProps.query.metricCategory.key === SLO_INFORMATION;\n  }\n\n  loadSloReports() {\n    const { query } = this.props;\n    this.props.datasource.getSloReports().then((sloReports) => {\n      if (!isUnmounting) {\n        this.setState({ sloReports: sloReports });\n\n        if (!query.sloReport && sloReports.length >= 1) {\n          query.sloReport = sloReports[0];\n        }\n      }\n    });\n  }\n\n  render() {\n    const { query } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormSelect\n          queryKeyword\n          inputWidth={0}\n          label={'Configured SLI'}\n          tooltip={'SLI configuration used to compute error budget and SLI values.'}\n          noOptionsMessage={'No configured SLI found'}\n          value={query.sloReport}\n          options={this.state.sloReports}\n          onChange={this.onSloChange}\n        />\n\n        <FormInput\n          queryKeyword\n          labelWidth={7}\n          inputWidth={0}\n          label={'SLO'}\n          tooltip={'Type in your desired SLO threshold from 0 to ' + MAX_VAL}\n          value={query.sloValue}\n          invalid={!this.state.isValidSlo}\n          placeholder={'0.99'}\n          onChange={this.onSloValueChange}\n        />\n\n        <FormSelect\n          queryKeyword\n          labelWidth={7}\n          inputWidth={0}\n          label={'Value type'}\n          tooltip={\n            <div>\n              Select your specific SLO information:\n              <ul>\n                <li>'SLI' requires Gauge visualization</li>\n                <li>'Remaining Error Budget' requires Singlestat visualization</li>\n                <li>'Timeseries' requires Bars draw mode on Graph visualization</li>\n              </ul>\n            </div>\n          }\n          value={query.sloSpecific}\n          options={SloSpecifics}\n          onChange={this.onSloSpecificChange}\n        />\n      </div>\n    );\n  }\n}\n","export default [\n  { key: 'pageLoad', label: 'Page Loads' },\n  { key: 'page_change', label: 'Page Transitions' },\n  { key: 'resourceLoad', label: 'Resources' },\n  { key: 'httpRequest', label: 'HTTP Requests' },\n  { key: 'error', label: 'Errors' },\n  { key: 'custom', label: 'Custom Events' },\n];\n","import React, { ChangeEvent } from 'react';\n\nimport { ANALYZE_WEBSITE_METRICS } from '../../GlobalVariables';\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport beacon_types from '../../lists/beacon_types';\nimport FormSelect from '../FormField/FormSelect';\nimport { SelectableValue } from '@grafana/data';\nimport { Input } from '@grafana/ui';\nimport _ from 'lodash';\n\ninterface WebsiteMetricsState {\n  websites: SelectableValue[];\n}\n\ninterface Props {\n  query: InstanaQuery;\n  groups: SelectableValue[];\n  datasource: DataSource;\n\n  updateGroups(groups: SelectableValue[]): void;\n  onRunQuery(): void;\n  onChange(value: InstanaQuery): void;\n  updateMetrics(metrics: SelectableValue[]): void;\n  filterMetricsOnType(type: string): any;\n}\n\nlet isUnmounting = false;\n\nexport class WebsiteMetrics extends React.Component<Props, WebsiteMetricsState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      websites: [],\n    };\n  }\n\n  componentDidMount() {\n    const { query, datasource, onChange } = this.props;\n    isUnmounting = false;\n    datasource.fetchWebsites().then((websites) => {\n      if (!isUnmounting) {\n        this.setState({\n          websites: websites,\n        });\n\n        // select the most loaded website for default/replacement\n        if ((!query.entity || !query.entity.key) && websites) {\n          query.entity = websites[0];\n        } else if (query.entity && !_.find(websites, ['key', query.entity.key])) {\n          query.entity = websites[0];\n        }\n\n        onChange(query);\n      }\n    });\n\n    datasource.dataSourceWebsite.getWebsiteTags().then((websiteTags: any) => {\n      if (!isUnmounting) {\n        this.props.updateGroups(_.sortBy(websiteTags, 'key'));\n\n        // select a meaningful default group\n        if (!query.group || !query.group.key) {\n          query.group = _.find(websiteTags, ['key', 'beacon.page.name']);\n          onChange(query);\n        }\n      }\n    });\n\n    if (!query.entityType || !query.entityType.key) {\n      query.entityType = beacon_types[0];\n      onChange(query);\n    }\n\n    datasource.dataSourceWebsite.getWebsiteMetricsCatalog().then((websiteMetrics: any) => {\n      if (!isUnmounting) {\n        this.props.updateMetrics(_.filter(websiteMetrics, (m) => m.beaconTypes.includes(query.entityType.key)));\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    isUnmounting = true;\n  }\n\n  onWebsiteChange = (website: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.entity = website;\n    onChange(query);\n    onRunQuery();\n  };\n\n  onBeaconTypeChange = (type: SelectableValue) => {\n    const { query, onChange, filterMetricsOnType } = this.props;\n    query.entityType = type;\n    onChange(query);\n    filterMetricsOnType(query.entityType.key);\n  };\n\n  onGroupChange = (group: SelectableValue) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.group = group;\n\n    if (query.group && query.metricCategory.key === ANALYZE_WEBSITE_METRICS) {\n      query.showGroupBySecondLevel = query.group.type === 'KEY_VALUE_PAIR';\n    }\n    if (!query.showGroupBySecondLevel) {\n      query.groupbyTagSecondLevelKey = '';\n    }\n\n    onChange(query);\n    onRunQuery();\n  };\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onGroupByTagSecondLevelKeyChange = (eventItem: ChangeEvent<HTMLInputElement>) => {\n    const { query, onChange } = this.props;\n    query.groupbyTagSecondLevelKey = eventItem.currentTarget.value;\n    onChange(query);\n\n    // onRunQuery with 500ms delay after last debounce\n    this.debouncedRunQuery();\n  };\n\n  render() {\n    const { query, groups } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormSelect\n          queryKeyword\n          inputWidth={0}\n          label={'Website'}\n          tooltip={'Select your website.'}\n          noOptionsMessage={'No websites found'}\n          value={query.entity}\n          options={this.state.websites}\n          onChange={this.onWebsiteChange}\n        />\n\n        <FormSelect\n          queryKeyword\n          labelWidth={6}\n          label={'Type'}\n          tooltip={'Select a beacon type.'}\n          value={query.entityType}\n          options={beacon_types}\n          onChange={this.onBeaconTypeChange}\n        />\n\n        <FormSelect\n          queryKeyword\n          labelWidth={6}\n          label={'Group by'}\n          tooltip={'Group by tag.'}\n          value={query.group}\n          options={groups}\n          onChange={this.onGroupChange}\n        />\n\n        <div style={!query.showGroupBySecondLevel ? { display: 'none' } : {}}>\n          <Input css={''} value={query.groupbyTagSecondLevelKey} onChange={this.onGroupByTagSecondLevelKeyChange} />\n        </div>\n      </div>\n    );\n  }\n}\n","export default [\n  { key: 'EQUALS', label: 'equals', type: 'STRING' },\n  { key: 'NOT_EQUAL', label: 'does not equal', type: 'STRING' },\n  { key: 'CONTAINS', label: 'contains', type: 'STRING' },\n  { key: 'NOT_CONTAIN', label: 'does not contain', type: 'STRING' },\n  { key: 'NOT_EMPTY', label: 'is present', type: 'STRING' },\n  { key: 'IS_EMPTY', label: 'is not present', type: 'STRING' },\n\n  { key: 'EQUALS', label: '=', type: 'NUMBER' },\n  { key: 'NOT_EQUAL', label: '!=', type: 'NUMBER' },\n  { key: 'LESS_THAN', label: '<', type: 'NUMBER' },\n  { key: 'GREATER_THAN', label: '>', type: 'NUMBER' },\n  { key: 'IS_EMPTY', label: 'is empty', type: 'NUMBER' },\n\n  { key: 'EQUALS', label: 'is', type: 'BOOLEAN' },\n\n  { key: 'EQUALS', label: 'equals', type: 'KEY_VALUE_PAIR' },\n  { key: 'NOT_EQUAL', label: 'does not equal', type: 'KEY_VALUE_PAIR' },\n  { key: 'CONTAINS', label: 'contains', type: 'KEY_VALUE_PAIR' },\n  { key: 'NOT_CONTAIN', label: 'does not contain', type: 'KEY_VALUE_PAIR' },\n  { key: 'NOT_EMPTY', label: 'is present', type: 'KEY_VALUE_PAIR' },\n  { key: 'IS_EMPTY', label: 'is not present', type: 'KEY_VALUE_PAIR' },\n];\n","import React, { FormEvent } from 'react';\n\nimport { ANALYZE_APPLICATION_METRICS, PLEASE_SPECIFY } from '../../GlobalVariables';\nimport { Button, InlineFormLabel, Input, Select } from '@grafana/ui';\nimport call_to_entities from '../../lists/apply_call_to_entities';\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport { SelectableValue } from '@grafana/data';\nimport TagFilter from '../../types/tag_filter';\nimport operators from '../../lists/operators';\nimport _ from 'lodash';\n\ninterface FilterState {}\n\ninterface Props {\n  query: InstanaQuery;\n  datasource: DataSource;\n  groups: SelectableValue[];\n  onRunQuery(): void;\n  onChange(value: InstanaQuery): void;\n}\n\nexport class Filters extends React.Component<Props, FilterState> {\n  OPERATOR_STRING = 'STRING';\n  OPERATOR_NUMBER = 'NUMBER';\n  OPERATOR_BOOLEAN = 'BOOLEAN';\n  OPERATOR_KEY_VALUE = 'KEY_VALUE_PAIR';\n\n  constructor(props: any) {\n    super(props);\n  }\n\n  addTagFilter = () => {\n    const { query, onChange } = this.props;\n    query.filters.push({\n      tag: query.group,\n      entity: call_to_entities[0],\n      operator: this.filterOperatorsOnType(query.group.type)[0],\n      booleanValue: false,\n      numberValue: 0,\n      stringValue: '',\n      isValid: false,\n    });\n\n    onChange(query);\n  };\n\n  removeTagFilter = (index: number) => {\n    const { query, onChange, onRunQuery } = this.props;\n    query.filters.splice(index, 1);\n\n    onChange(query);\n    onRunQuery();\n  };\n\n  filterOperatorsOnType(type: any): SelectableValue[] {\n    return _.filter(operators, (o) => o.type === type);\n  }\n\n  onGroupChange(group: SelectableValue, index: number) {\n    const { query } = this.props;\n    query.filters[index].tag = group;\n\n    let ops = this.filterOperatorsOnType(group.type);\n    if (!_.includes(ops, query.filters[index].operator)) {\n      query.filters[index].operator = ops[0];\n    }\n\n    this.validateChangeAndRun(index);\n  }\n\n  onCallToEntityChange = (callToEntity: SelectableValue, index: number) => {\n    const { query } = this.props;\n    query.filters[index].entity = callToEntity;\n\n    this.validateChangeAndRun(index);\n  };\n\n  onOperatorChange = (operator: SelectableValue, index: number) => {\n    const { query } = this.props;\n    query.filters[index].operator = operator;\n\n    this.validateChangeAndRun(index);\n  };\n\n  canShowStringInput(filter: TagFilter) {\n    return (\n      !filter.operator.key.includes('EMPTY') && (filter.tag.type === 'STRING' || filter.tag.type === 'KEY_VALUE_PAIR')\n    );\n  }\n\n  debouncedRunQuery = _.debounce(this.props.onRunQuery, 500);\n\n  onTagFilterStringValueChange = (value: FormEvent<HTMLInputElement>, index: number) => {\n    const { query } = this.props;\n    query.filters[index].stringValue = value.currentTarget.value;\n\n    this.validateChangeAndRun(index, true);\n  };\n\n  onTagFilterNumberValueChange = (value: FormEvent<HTMLInputElement>, index: number) => {\n    const { query } = this.props;\n    query.filters[index].numberValue = value.currentTarget.valueAsNumber;\n\n    this.validateChangeAndRun(index, true);\n  };\n\n  onTagFilterBooleanValueChange(value: SelectableValue, index: number) {\n    const { query } = this.props;\n    query.filters[index].booleanValue = value.key;\n\n    this.validateChangeAndRun(index);\n  }\n\n  validateChangeAndRun(index: number, runDebounced = false) {\n    const { query, onChange, onRunQuery } = this.props;\n    if (query.filters[index].tag) {\n      if (query.filters[index].operator.key.includes('EMPTY')) {\n        query.filters[index].isValid = true;\n        // to avoid sending value with query.filters[index] operators that do not require a value (such as is-present/is-not-present)\n        query.filters[index].stringValue = '';\n        query.filters[index].numberValue = 0;\n        query.filters[index].booleanValue = true;\n      } else if (this.OPERATOR_STRING === query.filters[index].tag.type && query.filters[index].stringValue) {\n        query.filters[index].isValid = true;\n      } else if (\n        this.OPERATOR_KEY_VALUE === query.filters[index].tag.type &&\n        query.filters[index].stringValue &&\n        query.filters[index].stringValue.includes('=')\n      ) {\n        query.filters[index].isValid = true;\n      } else if (this.OPERATOR_NUMBER === query.filters[index].tag.type && query.filters[index].numberValue !== null) {\n        query.filters[index].isValid = true;\n      } else {\n        query.filters[index].isValid =\n          this.OPERATOR_BOOLEAN === query.filters[index].tag.type && query.filters[index].booleanValue;\n      }\n    } else {\n      query.filters[index].isValid = false;\n    }\n\n    onChange(query);\n    if (runDebounced) {\n      // onRunQuery with 500ms delay after last debounce\n      this.debouncedRunQuery();\n    } else {\n      onRunQuery();\n    }\n  }\n\n  render() {\n    const { query, groups } = this.props;\n\n    console.log(query.filters);\n    let listFilter = query.filters.map((singleFilter, index) => {\n      return (\n        <div className={'gf-form'}>\n          <InlineFormLabel className={'query-keyword'} width={14} tooltip={'Filter by tag.'}>\n            {index + 1}. filter\n          </InlineFormLabel>\n          {query.metricCategory.key === ANALYZE_APPLICATION_METRICS && (\n            <Select\n              menuPlacement={'bottom'}\n              width={12}\n              isSearchable={true}\n              options={call_to_entities}\n              value={query.filters[index].entity}\n              onChange={(callToEntity) => this.onCallToEntityChange(callToEntity, index)}\n            />\n          )}\n          <Select\n            menuPlacement={'bottom'}\n            width={30}\n            isSearchable={true}\n            value={query.filters[index].tag}\n            options={groups}\n            onChange={(group) => this.onGroupChange(group, index)}\n          />\n          <Select\n            menuPlacement={'bottom'}\n            width={12}\n            isSearchable={true}\n            value={query.filters[index].operator}\n            options={this.filterOperatorsOnType(query.filters[index].tag.type)}\n            onChange={(operator) => this.onOperatorChange(operator, index)}\n          />\n\n          {this.canShowStringInput(query.filters[index]) && (\n            <Input\n              css={''}\n              width={30}\n              value={query.filters[index].stringValue}\n              placeholder={query.filters[index].tag.type === 'KEY_VALUE_PAIR' ? 'key=value' : PLEASE_SPECIFY}\n              onChange={(event) => this.onTagFilterStringValueChange(event, index)}\n            />\n          )}\n\n          {query.filters[index].tag.type === 'NUMBER' && (\n            <Input\n              css={''}\n              type={'number'}\n              width={30}\n              value={query.filters[index].numberValue}\n              placeholder={PLEASE_SPECIFY}\n              onChange={(event) => this.onTagFilterNumberValueChange(event, index)}\n            />\n          )}\n\n          {query.filters[index].tag.type === 'BOOLEAN' && (\n            <Select\n              menuPlacement={'bottom'}\n              width={30}\n              isSearchable={true}\n              onChange={(e) => this.onTagFilterBooleanValueChange(e, index)}\n              value={{ key: '' + query.filters[index].booleanValue, label: '' + query.filters[index].booleanValue }}\n              options={[\n                { key: 'false', label: 'false' },\n                { key: 'true', label: 'true' },\n              ]}\n            />\n          )}\n\n          <Button variant={'secondary'} onClick={() => this.removeTagFilter(index)}>\n            -\n          </Button>\n        </div>\n      );\n    });\n\n    return (\n      <div>\n        {listFilter}\n\n        <div className={'gf-form'}>\n          <InlineFormLabel width={14} tooltip={'Add an additional tag filter.'}>\n            Add filter\n          </InlineFormLabel>\n          <Button variant={'secondary'} onClick={this.addTagFilter}>\n            +\n          </Button>\n          <div hidden={!query.showWarningCantShowAllResults}>\n            <InlineFormLabel width={12} tooltip={'Add Filter to narrow down the data.'}>\n              ⚠️ Can't show all results\n            </InlineFormLabel>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport { BUILT_IN_METRICS, CUSTOM_METRICS, ANALYZE_APPLICATION_METRICS } from '../../GlobalVariables';\nimport { DataSource } from '../../datasources/DataSource';\nimport { InstanaQuery } from '../../types/instana_query';\nimport max_metrics from '../../lists/max_metrics';\nimport FormSelect from '../FormField/FormSelect';\nimport FormSwitch from '../FormField/FormSwitch';\nimport { SelectableValue } from '@grafana/data';\nimport _ from 'lodash';\n\ninterface MetricState {\n  possibleTimeIntervals: SelectableValue[];\n  possibleAggregations: SelectableValue[];\n}\n\ninterface Props {\n  query: InstanaQuery;\n  datasource: DataSource;\n  availableMetrics: SelectableValue[];\n\n  updateMetrics(metrics: SelectableValue[]): void;\n\n  onRunQuery(): void;\n\n  onChange(value: InstanaQuery): void;\n}\n\nexport default class Metric extends React.Component<Props, MetricState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      possibleTimeIntervals: [],\n      possibleAggregations: [],\n    };\n  }\n\n  componentDidMount() {\n    const { query, datasource, onChange } = this.props;\n\n    if (!query.timeInterval || !query.timeInterval.key) {\n      query.timeInterval = datasource.getDefaultTimeInterval(query);\n    }\n\n    onChange(query);\n  }\n\n  onMetricChange = (metric: SelectableValue) => {\n    const { query, onRunQuery, onChange } = this.props;\n    query.metric = metric;\n\n    if (query.metric && query.metric.key && !_.includes(query.metric.aggregations, query.aggregation)) {\n      query.aggregation = query.metric.aggregations[0];\n    }\n\n    if (query.displayMaxMetricValue && !this.canShowMaxMetricValue()) {\n      query.displayMaxMetricValue = false;\n    }\n\n    query.allMetrics = [];\n    query.showAllMetrics = false;\n\n    onChange(query);\n    onRunQuery();\n  };\n\n  canShowMaxMetricValue() {\n    const { query } = this.props;\n    return (\n      query.entityType &&\n      query.entityType.key === 'host' &&\n      query.metric &&\n      _.find(max_metrics, (m) => m.key === query.metric.key)\n    );\n  }\n\n  onTimeIntervalChange = (timeInterval: SelectableValue) => {\n    const { query, onRunQuery, onChange } = this.props;\n    query.timeInterval = timeInterval;\n    onChange(query);\n    onRunQuery();\n  };\n\n  onAggregationChange = (aggregation: SelectableValue) => {\n    const { query, onRunQuery, onChange } = this.props;\n    query.aggregation = aggregation;\n    onChange(query);\n    onRunQuery();\n  };\n\n  onShowMaxValueChange = (event?: React.SyntheticEvent<HTMLInputElement>) => {\n    const { query, onChange, onRunQuery } = this.props;\n    if (event && event.currentTarget) {\n      query.displayMaxMetricValue = event.currentTarget.checked;\n      onChange(query);\n      onRunQuery();\n    }\n  };\n\n  onShowAllMetricsChange = (event?: React.SyntheticEvent<HTMLInputElement>) => {\n    const { query, onChange, onRunQuery } = this.props;\n    if (event && event.currentTarget) {\n      query.showAllMetrics = event.currentTarget.checked;\n      if (query.showAllMetrics) {\n        query.metric = { key: null, label: `Displaying ${this.props.availableMetrics.length} metrics` };\n        query.allMetrics = this.props.availableMetrics;\n      }\n      onChange(query);\n      onRunQuery();\n    }\n  };\n\n  canShowAggregation() {\n    const { query } = this.props;\n    return query.metricCategory.key >= ANALYZE_APPLICATION_METRICS;\n  }\n\n  canSelectAggregation() {\n    const { query } = this.props;\n    return query.metric && query.metric.aggregations && query.metric.aggregations.length > 1;\n  }\n\n  render() {\n    const { query, datasource } = this.props;\n\n    return (\n      <div className={'gf-form'}>\n        <FormSelect\n          queryKeyword\n          disabled={query.useFreeTextMetrics}\n          inputWidth={0}\n          label={'Metric'}\n          tooltip={'Select the metric you wish to plot.'}\n          value={query.metric}\n          noOptionsMessage={'No metrics found'}\n          options={this.props.availableMetrics}\n          onChange={this.onMetricChange}\n        />\n\n        {query.metricCategory.key === BUILT_IN_METRICS && (\n          <FormSwitch\n            queryKeyword\n            disabled={!this.canShowMaxMetricValue()}\n            labelWidth={9}\n            label={'Show max value'}\n            tooltip={\n              \"Displays the maximal value of current metric. Supported for 'Type=Host' with cpu.used, \" +\n              'memory.used and openFiles.used only.'\n            }\n            value={query.displayMaxMetricValue}\n            onChange={this.onShowMaxValueChange}\n          />\n        )}\n\n        {query.metricCategory.key === CUSTOM_METRICS && (\n          <FormSwitch\n            queryKeyword\n            disabled={!query.canShowAllMetrics}\n            labelWidth={9}\n            label={'Show all metrics'}\n            tooltip={\n              'You have the option to show all metrics in the graph once the amount of possible, selectable ' +\n              'metrics is between 1 and 5.'\n            }\n            value={query.showAllMetrics}\n            onChange={this.onShowAllMetricsChange}\n          />\n        )}\n\n        {this.canShowAggregation() && (\n          <FormSelect\n            queryKeyword\n            disabled={!this.canSelectAggregation()}\n            labelWidth={6}\n            inputWidth={12}\n            label={'Aggregation'}\n            tooltip={'Select a metric aggregation.'}\n            value={query.aggregation}\n            options={query.metric.aggregations}\n            onChange={this.onAggregationChange}\n          />\n        )}\n\n        <FormSelect\n          queryKeyword\n          disabled={datasource.availableTimeIntervals.length <= 1}\n          labelWidth={6}\n          inputWidth={12}\n          label={'Rollup'}\n          tooltip={'Select the rollup value.'}\n          value={query.timeInterval}\n          options={datasource.availableTimeIntervals}\n          onChange={this.onTimeIntervalChange}\n        />\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\n\nimport {\n  ANALYZE_APPLICATION_METRICS,\n  ANALYZE_WEBSITE_METRICS,\n  APPLICATION_SERVICE_ENDPOINT_METRICS,\n  BUILT_IN_METRICS,\n  CUSTOM_METRICS,\n  SLO_INFORMATION,\n} from '../GlobalVariables';\nimport { ApplicationServiceEndpointMetrics } from './ApplicationServiceEndpointMetrics/ApplicationServiceEndpointMetrics';\nimport { ApplicationCallsMetrics } from './Analyze/ApplicationCallsMetrics';\nimport { MetricFilter } from './Infrastructure/Custom/MetricFilter';\nimport AdvancedSettings from './AdvancedSettings/AdvancedSettings';\nimport { QueryEditorProps, SelectableValue } from '@grafana/data';\nimport { Infrastructure } from './Infrastructure/Infrastructure';\nimport { SloInformation } from './SLOInformation/SloInformation';\nimport AggregationFunctions from '../lists/aggregation_function';\nimport { InstanaOptions } from '../types/instana_options';\nimport MetricCategories from '../lists/metric_categories';\nimport { WebsiteMetrics } from './Analyze/WebsiteMetrics';\nimport { DataSource } from '../datasources/DataSource';\nimport { InstanaQuery } from '../types/instana_query';\nimport FormSelect from './FormField/FormSelect';\nimport { Filters } from './Analyze/Filter';\nimport Metric from './Metric/Metric';\nimport migrate from '../migration';\nimport _ from 'lodash';\n\nimport '../instana-grafana.css';\n\ntype Props = QueryEditorProps<DataSource, InstanaQuery, InstanaOptions>;\n\ninterface QueryState {\n  groups: SelectableValue[];\n  queryTypes: SelectableValue[];\n  allMetrics: SelectableValue[];\n  availableMetrics: SelectableValue[];\n}\n\nexport class QueryEditor extends PureComponent<Props, QueryState> {\n  query: InstanaQuery;\n  snapshots: any;\n\n  constructor(props: Props) {\n    super(props);\n    const defaultQuery: Partial<InstanaQuery> = {\n      metricCategory: MetricCategories[0],\n      customFilters: [],\n    };\n\n    this.query = Object.assign(defaultQuery, props.query);\n\n    migrate(this.query);\n\n    this.state = {\n      groups: [],\n      allMetrics: [],\n      queryTypes: [],\n      availableMetrics: [],\n    };\n\n    this.filterMetricsOnType = this.filterMetricsOnType.bind(this);\n    this.loadEntityTypes = this.loadEntityTypes.bind(this);\n\n    this.props.onChange(this.query);\n  }\n\n  onCategoryChange = (newCategory: SelectableValue) => {\n    if (this.query.metricCategory === newCategory) {\n      // nothing needs to be done\n    } else {\n      this.selectionReset();\n      this.query.metricCategory = newCategory;\n      this.query.timeInterval = this.props.datasource.getDefaultTimeInterval(this.query);\n\n      this.changeAndRun();\n    }\n  };\n\n  changeAndRun = () => {\n    this.props.onChange(this.query);\n    this.props.onRunQuery();\n  };\n\n  setMetricPlaceholder(nrOfTotalResults: number) {\n    if (this.query.metricCategory.key === CUSTOM_METRICS) {\n      this.query.metric = {\n        key: null,\n        label: 'Please select (' + nrOfTotalResults + '/' + this.state.allMetrics.length + ')',\n      };\n    } else {\n      this.query.metric = {\n        key: null,\n        label: 'Please select (' + nrOfTotalResults + ')',\n      };\n    }\n\n    this.props.onChange(this.query);\n  }\n\n  updateMetrics = (metrics: SelectableValue[]) => {\n    this.setState({\n      availableMetrics: _.sortBy(metrics, 'key'),\n      allMetrics: _.sortBy(metrics, 'key'),\n    });\n\n    if ((this.query.metric && this.query.metric.key) || this.query.showAllMetrics) {\n      const metric = _.find(metrics, (m) => m.key === this.query.metric.key);\n      metric ? (this.query.metric = metric) : (this.query.metric = { key: null });\n    }\n\n    if (this.query.metricCategory.key === CUSTOM_METRICS) {\n      this.onMetricsFilter(this.query.customFilters); // this contains setMetricPlaceholder\n    } else if (!this.query.metric || !this.query.metric.key) {\n      this.setMetricPlaceholder(metrics.length);\n    }\n\n    this.changeAndRun();\n  };\n\n  loadEntityTypes(filterResult = true) {\n    const { query, datasource, onRunQuery } = this.props;\n\n    if (query.entityQuery) {\n      datasource.fetchTypesForTarget(query).then((response: any) => {\n        this.snapshots = response.data;\n        this.filterForEntityType(true, filterResult);\n        onRunQuery();\n      });\n    } else {\n      this.setState({ queryTypes: [] });\n    }\n  }\n\n  filterForEntityType = (findMatchingEntityTypes = true, filterResults = true) => {\n    const { query, datasource, onChange } = this.props;\n    datasource.getEntityTypes().then((entityTypes) => {\n      let queryTypes = entityTypes;\n      if (filterResults && !query.useFreeTextMetrics) {\n        queryTypes = this.filterEntityTypes(entityTypes, findMatchingEntityTypes);\n      }\n\n      this.setState({ queryTypes: queryTypes });\n\n      if (!query.entityType || !query.entityType.key || !_.find(queryTypes, (m) => m.key === query.entityType.key)) {\n        query.entityType = { key: null, label: 'Please select (' + queryTypes.length + ')' };\n      }\n\n      onChange(query);\n    });\n  };\n\n  filterEntityTypes = (entityTypes: SelectableValue[], findMatchingEntityTypes: boolean) => {\n    if (findMatchingEntityTypes) {\n      return _.sortBy(\n        _.filter(entityTypes, (entityType) => this.findMatchingEntityTypes(entityType)),\n        'label'\n      );\n    }\n\n    return _.sortBy(entityTypes, 'label');\n  };\n\n  findMatchingEntityTypes = (entityType: SelectableValue) => {\n    const { query } = this.props;\n    // workaround as long the api does not support returning plugins with custom metrics only\n    if (\n      query.metricCategory.key === BUILT_IN_METRICS ||\n      entityType.key === 'statsd' ||\n      entityType.key === 'prometheus' ||\n      entityType.key === 'jvmRuntimePlatform' ||\n      entityType.key === 'dropwizardApplicationContainer'\n    ) {\n      return this.snapshots.find((type: any) => type === entityType.key) && entityType.label != null;\n    }\n\n    return false;\n  };\n\n  updateQueryTypes = (types: SelectableValue[]) => {\n    this.setState({\n      queryTypes: types,\n    });\n  };\n\n  updateGroups = (groups: SelectableValue[]) => {\n    this.setState({\n      groups: groups,\n    });\n  };\n\n  onMetricsFilter = (customFilters: string[]) => {\n    let newAvailableMetrics: SelectableValue[] = [];\n    if (!customFilters || customFilters.length === 0) {\n      newAvailableMetrics = this.state.allMetrics;\n    } else {\n      newAvailableMetrics = this.applyFilterToMetricList(customFilters);\n    }\n    this.query.canShowAllMetrics = this.isAbleToShowAllMetrics(newAvailableMetrics);\n    if (!this.query.canShowAllMetrics) {\n      this.query.showAllMetrics = false;\n    }\n    this.query.customFilters = customFilters;\n    if (!this.query.metric || !this.query.metric.key) {\n      this.setMetricPlaceholder(newAvailableMetrics.length);\n    }\n\n    this.setState((state) => ({ ...state, availableMetrics: newAvailableMetrics }));\n\n    this.props.onChange(this.query);\n    this.checkMetricAndRefresh();\n  };\n\n  applyFilterToMetricList(filters: string[]) {\n    let filteredMetrics: any = this.state.allMetrics;\n    _.forEach(filters, (filter) => {\n      if (filter !== '') {\n        filteredMetrics = _.sortBy(\n          _.filter(filteredMetrics, (metric) => metric.key.toLowerCase().includes(filter.toLowerCase())),\n          'key'\n        );\n      }\n    });\n\n    return filteredMetrics;\n  }\n\n  filterMetricsOnType(type: string) {\n    let filteredMetrics: SelectableValue[] = this.state.allMetrics.filter((metric) => {\n      return metric.beaconTypes.includes(type);\n    });\n\n    this.setState({\n      availableMetrics: filteredMetrics,\n    });\n\n    if (!this.query.metric || !this.query.metric.key || !this.query.metric.beaconTypes.includes(type)) {\n      this.setMetricPlaceholder(filteredMetrics.length);\n    }\n\n    this.changeAndRun();\n  }\n\n  isAbleToShowAllMetrics(metrics: SelectableValue[]) {\n    return this.query.metricCategory.key === CUSTOM_METRICS && metrics.length > 0 && metrics.length <= 5;\n  }\n\n  checkMetricAndRefresh() {\n    if (\n      this.query.metric &&\n      this.query.metric.key &&\n      !_.includes(\n        _.map(this.state.availableMetrics, (m) => m.key),\n        this.query.metric.key\n      )\n    ) {\n      this.resetMetricSelection();\n    }\n\n    this.changeAndRun();\n  }\n\n  selectionReset() {\n    const { query } = this.props;\n    if (query.metricCategory.key > CUSTOM_METRICS) {\n      query.entityQuery = '';\n    }\n\n    this.setState({\n      availableMetrics: [],\n      allMetrics: [],\n      groups: [],\n    });\n\n    this.resetEntityTypeSelection();\n    this.resetEntitySelection();\n    this.resetMetricSelection();\n  }\n\n  resetEntityTypeSelection() {\n    const { query } = this.props;\n    query.entityType = {\n      key: null,\n      label: '-',\n    };\n    query.customFilters = [];\n  }\n\n  resetEntitySelection() {\n    const { query } = this.props;\n    query.entity = {};\n    query.group = {};\n    query.showGroupBySecondLevel = false;\n    query.groupbyTagSecondLevelKey = '';\n    query.aggregateGraphs = false;\n    query.aggregationFunction = AggregationFunctions[0];\n    query.hideOriginalGraphs = false;\n    query.filters = [];\n    query.showWarningCantShowAllResults = false;\n    query.showAllMetrics = false;\n    query.canShowAllMetrics = false;\n    query.displayMaxMetricValue = false;\n    query.applicationCallToEntity = {};\n    query.callToEntity = {};\n    this.resetServices();\n    this.resetEndpoints();\n    this.resetSLO();\n  }\n\n  resetMetricSelection() {\n    const { query } = this.props;\n    query.metric = {};\n    query.timeShift = '';\n    query.timeShiftIsValid = true;\n    query.showWarningCantShowAllResults = false;\n    query.showAllMetrics = false;\n    query.labelFormat = '';\n    query.freeTextMetrics = '';\n    query.useFreeTextMetrics = false;\n  }\n\n  resetServices() {\n    this.props.query.service = {};\n  }\n\n  resetEndpoints() {\n    this.props.query.endpoint = {};\n  }\n\n  resetSLO() {\n    const { query } = this.props;\n    query.sloValue = '';\n    query.sloReport = {};\n  }\n\n  render() {\n    const { query, onCategoryChange } = this;\n\n    return (\n      <div className={'gf-form-group'}>\n        <div className={'gf-form'}>\n          <FormSelect\n            queryKeyword\n            inputWidth={0}\n            label={'Category'}\n            tooltip={'Select a metric category.'}\n            value={query.metricCategory}\n            options={MetricCategories}\n            onChange={onCategoryChange}\n          />\n        </div>\n\n        {query.metricCategory.key === BUILT_IN_METRICS && (\n          <Infrastructure\n            query={query}\n            queryTypes={this.state.queryTypes}\n            datasource={this.props.datasource}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            updateMetrics={this.updateMetrics}\n            loadEntityTypes={this.loadEntityTypes}\n            updateQueryTypes={this.updateQueryTypes}\n          />\n        )}\n\n        {query.metricCategory.key === CUSTOM_METRICS && (\n          <Infrastructure\n            query={query}\n            queryTypes={this.state.queryTypes}\n            datasource={this.props.datasource}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            updateMetrics={this.updateMetrics}\n            loadEntityTypes={this.loadEntityTypes}\n            updateQueryTypes={this.updateQueryTypes}\n          />\n        )}\n\n        {query.metricCategory.key === ANALYZE_APPLICATION_METRICS && (\n          <ApplicationCallsMetrics\n            query={query}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            updateMetrics={this.updateMetrics}\n            groups={this.state.groups}\n            updateGroups={this.updateGroups}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {query.metricCategory.key === ANALYZE_WEBSITE_METRICS && (\n          <WebsiteMetrics\n            query={query}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            updateMetrics={this.updateMetrics}\n            groups={this.state.groups}\n            updateGroups={this.updateGroups}\n            filterMetricsOnType={this.filterMetricsOnType}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {query.metricCategory.key === APPLICATION_SERVICE_ENDPOINT_METRICS && (\n          <ApplicationServiceEndpointMetrics\n            query={query}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            updateMetrics={this.updateMetrics}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {query.metricCategory.key === SLO_INFORMATION && (\n          <SloInformation\n            query={query}\n            onRunQuery={this.props.onRunQuery}\n            onChange={this.props.onChange}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {query.metricCategory.key !== SLO_INFORMATION && (\n          <Metric\n            query={query}\n            onChange={this.props.onChange}\n            onRunQuery={this.props.onRunQuery}\n            updateMetrics={this.updateMetrics}\n            availableMetrics={this.state.availableMetrics}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {query.metricCategory.key === CUSTOM_METRICS && (\n          <MetricFilter\n            query={query}\n            onChange={this.props.onChange}\n            onRunQuery={this.props.onRunQuery}\n            onFilterChange={this.onMetricsFilter}\n            availableMetrics={this.state.availableMetrics}\n            datasource={this.props.datasource}\n          />\n        )}\n\n        {(query.metricCategory.key === ANALYZE_APPLICATION_METRICS ||\n          query.metricCategory.key === ANALYZE_WEBSITE_METRICS) && (\n          <Filters\n            query={query}\n            onChange={this.props.onChange}\n            onRunQuery={this.props.onRunQuery}\n            datasource={this.props.datasource}\n            groups={this.state.groups}\n          />\n        )}\n\n        <AdvancedSettings\n          query={query}\n          onRunQuery={this.props.onRunQuery}\n          onChange={this.props.onChange}\n          loadEntityTypes={this.loadEntityTypes}\n        />\n      </div>\n    );\n  }\n}\n","import { InstanaOptions } from './types/instana_options';\nimport { DataSourcePlugin } from '@grafana/data';\nimport { DataSource } from './datasources/DataSource';\nimport { ConfigEditor } from './components/ConfigEditor';\nimport { QueryEditor } from './components/QueryEditor';\nimport { InstanaQuery } from './types/instana_query';\n\nexport const plugin = new DataSourcePlugin<DataSource, InstanaQuery, InstanaOptions>(DataSource)\n  .setConfigEditor(ConfigEditor)\n  .setQueryEditor(QueryEditor);\n"],"sourceRoot":""}